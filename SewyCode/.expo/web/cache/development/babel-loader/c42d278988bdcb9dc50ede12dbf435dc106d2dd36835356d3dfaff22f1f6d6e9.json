{"ast":null,"code":"var _jsxFileName = \"/Users/clara/Desktop/Sewy/SewyCode/components/Patron.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Svg, { Rect, Line, Path, Circle } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\nimport * as Print from \"expo-print\";\nimport { error, PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport * as FileSystem from \"expo-file-system\";\nimport * as Sharing from \"expo-sharing\";\nimport { encode } from \"base64-arraybuffer\";\nimport { convertSvgToPdf } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Patron() {\n  const [taille, setTaille] = useState(0);\n  const [poitrine, setPoitrine] = useState(0);\n  const [longueurDos, setLongueurDos] = useState(0);\n  const [buste, setBuste] = useState(0);\n  const [distanceEpaules, setDistanceEpaules] = useState(0);\n  const [carrure, setCarrure] = useState(0);\n  const [tourTaille, setTourTaille] = useState(0);\n  const [longueurDevant, setLongueurDevant] = useState(0);\n  const setMensurations = () => {\n    setTaille(165);\n    setPoitrine(88);\n    setLongueurDos(42);\n    setBuste(86);\n    setDistanceEpaules(38);\n    setCarrure(34);\n    setTourTaille(72);\n    setLongueurDevant(48);\n    saveAsPDF();\n  };\n  const TracerPatron = async () => {\n    const ptsPerCm = 72 / 2.54;\n    let xA = 50;\n    let yA = 50;\n    let xB = xA + (buste / 2 + 4) * ptsPerCm;\n    let yB = yA;\n    let xD = xA;\n    let yD = yA + longueurDos * ptsPerCm;\n    let xE = xA;\n    let yE = yA + (poitrine / 48 + 0.2) * ptsPerCm;\n    let xE1 = xE;\n    let yE1 = yE + 4.5 * ptsPerCm;\n    let hauteurEmmanchure = (taille / 8 + poitrine / 48 + 1.7) * ptsPerCm;\n    let xF = xA;\n    let yF = yA + hauteurEmmanchure;\n    let xG = xA + poitrine / 12 * ptsPerCm;\n    let yG = yA;\n    let xH = xA + carrure / 2 * ptsPerCm;\n    let yH = yA;\n    let xF1 = xF + (buste / 4 + 2) * ptsPerCm;\n    let yF1 = yF;\n    let xD1 = xD + (tourTaille / 4 + 2) * ptsPerCm;\n    let yD1 = yD;\n    let xI = xH;\n    let yI = yF;\n    let xL = xH;\n    let yL = yE1;\n    let xL1 = xE1 + distanceEpaules / 2 * ptsPerCm;\n    let yL1 = yE1;\n    let xM = xI + 0.3 * ptsPerCm;\n    let yM = yI - 5 * ptsPerCm;\n    let controlX1 = (xL1 + xM) / 2 - 4;\n    let controlY1 = yL1 + 150;\n    let controlX2 = xM - 120;\n    let controlY2 = yM + 60;\n    console.log(\"xA:\", xA, \"xB:\", xB, \"xD:\", xD, \"xE:\", xE, \"xF:\", xF, \"xH:\", xH, \"xI:\", xI, \"xL:\", xL, \"xM:\", xM);\n    console.log(\"buste:\", buste, \"poitrine:\", poitrine, \"taille:\", taille, \"longueurDos:\", longueurDos, \"tourTaille:\", tourTaille, \"carrure:\", carrure, \"distanceEpaules:\", distanceEpaules);\n    const widthMax = Math.max(xA, xB, xD, xE, xF, xH, xI, xL, xM) / ptsPerCm;\n    console.log(\"widthMax en points:\", widthMax);\n    const heightMax = Math.max(yA, yB, yD, yE, yF, yH, yI, yL, yM) / ptsPerCm;\n    console.log(\"widthMax\", widthMax);\n    let svg = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" \n        width=\"${widthMax}cm\" \n        height=\"${heightMax}cm\" \n        viewBox=\"0 0 21cm 29.7cm\">\n    \n\n      <!-- Partie DOS du patron -->\n      <!-- AB: Ligne horizontale en haut -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xB}\" y2=\"${yB}\" stroke=\"blue\" stroke-width=\"2\"/>\n      \n      <!-- AD: Ligne verticale à gauche -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xD}\" y2=\"${yD}\" stroke=\"red\" stroke-width=\"2\"/>\n      \n      <!-- Encolure: G à E -->\n      <path d=\"M${xG} ${yG} Q${(xG + xE) / 2} ${yE}, ${xE} ${yE}\" fill=\"none\" stroke=\"purple\" stroke-width=\"2\"/>\n      \n      <!-- Ligne AE -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xE}\" y2=\"${yE}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne E jusqu'à E1 -->\n      <line x1=\"${xE}\" y1=\"${yE}\" x2=\"${xE1}\" y2=\"${yE1}\" stroke=\"green\" stroke-width=\"2\"/>\n      \n      <!-- Ligne d'épaule G à L1 -->\n      <line x1=\"${xG}\" y1=\"${yG}\" x2=\"${xL1}\" y2=\"${yL1}\" stroke=\"orange\" stroke-width=\"2\"/>\n      \n      <!-- Ligne hauteur d'emmanchure A à F -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xF}\" y2=\"${yF}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne F à F1 (largeur à hauteur d'emmanchure) -->\n      <line x1=\"${xF}\" y1=\"${yF}\" x2=\"${xF1}\" y2=\"${yF1}\" stroke=\"brown\" stroke-width=\"2\"/>\n      \n      <!-- Ligne D à D1 (largeur en bas) -->\n      <line x1=\"${xD}\" y1=\"${yD}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"blue\" stroke-width=\"2\"/>\n      \n      <!-- Ligne de côté F1 à D1 -->\n      <line x1=\"${xF1}\" y1=\"${yF1}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"green\" stroke-width=\"2\"/>\n      \n      <!-- Ligne H à L (descente de 4.5cm) -->\n      <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xL}\" y2=\"${yL}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne H à I (perpendiculaire) -->\n      <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xI}\" y2=\"${yI}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Point M (à partir de I) -->\n      <circle cx=\"${xM}\" cy=\"${yM}\" r=\"3\" fill=\"red\"/>\n      \n      <!-- Emmanchure: courbe de L1 à F1 -->\n      <path d=\"M${xL1} ${yL1} C${controlX1} ${controlY1}, ${controlX2} ${controlY2}, ${xF1} ${yF1}\" fill=\"none\" stroke=\"red\" stroke-width=\"2\"/>\n      \n    </svg>\n    `;\n    return svg;\n  };\n  const generatePDFfromSVG = async svg => {\n    try {\n      const responseBase64 = await convertSvgToPdf(svg);\n      console.log(\"Conversion SVG vers PDF réussie\");\n      const fileUri = FileSystem.documentDirectory + \"patron.pdf\";\n      await FileSystem.writeAsStringAsync(fileUri, responseBase64, {\n        encoding: FileSystem.EncodingType.Base64\n      });\n      await Sharing.shareAsync(fileUri);\n    } catch (error) {\n      console.error(\"Erreur de génération du PDF\", error);\n    }\n  };\n  const saveAsPDF = async () => {\n    console.log(\"saveAsPDF called\");\n    const svg = await TracerPatron();\n    console.log(\"SVG généré\", svg);\n    await generatePDFfromSVG(svg);\n  };\n  return _jsxDEV(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Patron T-Shirt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Taille (hauteur totale en cm)\",\n        keyboardType: \"numeric\",\n        value: taille ? taille.toString() : \"\",\n        onChangeText: text => setTaille(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de poitrine (cm)\",\n        keyboardType: \"numeric\",\n        value: poitrine ? poitrine.toString() : \"\",\n        onChangeText: text => setPoitrine(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Hauteur dos (base du cou \\xE0 la taille en cm)\",\n        keyboardType: \"numeric\",\n        value: longueurDos ? longueurDos.toString() : \"\",\n        onChangeText: text => setLongueurDos(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de buste (cm)\",\n        keyboardType: \"numeric\",\n        value: buste ? buste.toString() : \"\",\n        onChangeText: text => setBuste(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Distance entre les \\xE9paules (cm)\",\n        keyboardType: \"numeric\",\n        value: distanceEpaules ? distanceEpaules.toString() : \"\",\n        onChangeText: text => setDistanceEpaules(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Carrure - largeur du dos (cm)\",\n        keyboardType: \"numeric\",\n        value: carrure ? carrure.toString() : \"\",\n        onChangeText: text => setCarrure(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de taille (cm)\",\n        keyboardType: \"numeric\",\n        value: tourTaille ? tourTaille.toString() : \"\",\n        onChangeText: text => setTourTaille(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Longueur cou taille (cm)\",\n        keyboardType: \"numeric\",\n        value: longueurDevant ? longueurDevant.toString() : \"\",\n        onChangeText: text => setLongueurDevant(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"T\\xE9l\\xE9charger en PDF\",\n        onPress: saveAsPDF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"T\\xE9l\\xE9charger Avec Mensurations\",\n        onPress: setMensurations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  input: {\n    width: 300,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10\n  }\n});\nexport default Patron;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","Keyboard","TouchableWithoutFeedback","ScrollView","Svg","Rect","Line","Path","Circle","printToFileAsync","shareAsync","Print","error","PDFDocument","rgb","StandardFonts","FileSystem","Sharing","encode","convertSvgToPdf","jsxDEV","_jsxDEV","Patron","taille","setTaille","poitrine","setPoitrine","longueurDos","setLongueurDos","buste","setBuste","distanceEpaules","setDistanceEpaules","carrure","setCarrure","tourTaille","setTourTaille","longueurDevant","setLongueurDevant","setMensurations","saveAsPDF","TracerPatron","ptsPerCm","xA","yA","xB","yB","xD","yD","xE","yE","xE1","yE1","hauteurEmmanchure","xF","yF","xG","yG","xH","yH","xF1","yF1","xD1","yD1","xI","yI","xL","yL","xL1","yL1","xM","yM","controlX1","controlY1","controlX2","controlY2","console","log","widthMax","Math","max","heightMax","svg","generatePDFfromSVG","responseBase64","fileUri","documentDirectory","writeAsStringAsync","encoding","EncodingType","Base64","onPress","dismiss","accessible","children","style","styles","container","title","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","keyboardType","value","toString","onChangeText","text","Number","create","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","width","borderWidth","borderColor","borderRadius"],"sources":["/Users/clara/Desktop/Sewy/SewyCode/components/Patron.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  TextInput,\n  Button,\n  Text,\n  StyleSheet,\n  Keyboard,\n  TouchableWithoutFeedback,\n  ScrollView,\n} from \"react-native\";\nimport Svg, { Rect, Line, Path, Circle } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\nimport * as Print from \"expo-print\";\nimport { error, PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport * as FileSystem from \"expo-file-system\";\nimport * as Sharing from \"expo-sharing\";\nimport { encode } from \"base64-arraybuffer\";\nimport { convertSvgToPdf } from \"../services/api\";\n\nexport function Patron() {\n  const [taille, setTaille] = useState(0); // Hauteur totale (tête aux pieds)\n  const [poitrine, setPoitrine] = useState(0); // Tour de poitrine\n  const [longueurDos, setLongueurDos] = useState(0); // Hauteur dos (base du cou à la taille)\n  const [buste, setBuste] = useState(0); // Tour de buste\n  const [distanceEpaules, setDistanceEpaules] = useState(0); // Distance entre les deux épaules\n  const [carrure, setCarrure] = useState(0); // Largeur du dos sous les aisselles\n  const [tourTaille, setTourTaille] = useState(0); // Tour de taille\n  const [longueurDevant, setLongueurDevant] = useState(0);\n\n  const setMensurations = () => {\n    setTaille(165);\n    setPoitrine(88);\n    setLongueurDos(42);\n    setBuste(86);\n    setDistanceEpaules(38);\n    setCarrure(34);\n    setTourTaille(72);\n    setLongueurDevant(48);\n    saveAsPDF();\n  };\n\n  const TracerPatron = async () => {\n    const ptsPerCm = 72 / 2.54; // conversion cm en points\n\n    // ------ PARTIE DOS DU PATRON ------\n\n    // Point A - Point de départ en haut à gauche\n    let xA = 50;\n    let yA = 50;\n\n    // AB = tour de buste/2 + 4 cm d'aisance\n    let xB = xA + (buste / 2 + 4) * ptsPerCm;\n    let yB = yA;\n\n    // AD = hauteur dos (base du cou à la taille)\n    let xD = xA;\n    let yD = yA + longueurDos * ptsPerCm;\n\n    // AE = 1/48 tour de poitrine + 0.2 cm\n    let xE = xA;\n    let yE = yA + (poitrine / 48 + 0.2) * ptsPerCm;\n\n    // AE1 = descendre de 4.5 cm\n    let xE1 = xE;\n    let yE1 = yE + 4.5 * ptsPerCm;\n\n    // AF = 1/8 hauteur + 1/48 tour de poitrine + 1.7 cm (hauteur d'emmanchure)\n    let hauteurEmmanchure = (taille / 8 + poitrine / 48 + 1.7) * ptsPerCm;\n    let xF = xA;\n    let yF = yA + hauteurEmmanchure;\n\n    // AG = 1/12 tour de poitrine\n    let xG = xA + (poitrine / 12) * ptsPerCm;\n    let yG = yA;\n\n    // AH = 1/2 carrure (largeur du dos)\n    let xH = xA + (carrure / 2) * ptsPerCm;\n    let yH = yA; // H est au même niveau que F (hauteur d'emmanchure)\n\n    // FF1 = 1/4 tour de buste + 2 cm d'aisance\n    let xF1 = xF + (buste / 4 + 2) * ptsPerCm;\n    let yF1 = yF;\n\n    // DD1 = 1/4 tour de taille + 2 cm d'aisance\n    let xD1 = xD + (tourTaille / 4 + 2) * ptsPerCm;\n    let yD1 = yD;\n\n    // HI = perpendiculaire à FF1 (I est au même x que F1)\n    let xI = xH;\n    let yI = yF;\n\n    // HL = descendre de 4.5 cm\n    let xL = xH;\n    let yL = yE1;\n\n    // E1L1 = 1/2 distance entre les deux épaules\n    let xL1 = xE1 + (distanceEpaules / 2) * ptsPerCm;\n    let yL1 = yE1;\n\n    // IM = remonter de 5 cm et aller vers la droite de 0.3 cm\n    let xM = xI + 0.3 * ptsPerCm;\n    let yM = yI - 5 * ptsPerCm;\n\n    // Point de contrôle pour la courbe d'emmanchure\n    let controlX1 = (xL1 + xM) / 2 - 4;\n    let controlY1 = yL1 + 150;\n\n    let controlX2 = xM - 120;\n    let controlY2 = yM + 60;\n\n    console.log(\n      \"xA:\",\n      xA,\n      \"xB:\",\n      xB,\n      \"xD:\",\n      xD,\n      \"xE:\",\n      xE,\n      \"xF:\",\n      xF,\n      \"xH:\",\n      xH,\n      \"xI:\",\n      xI,\n      \"xL:\",\n      xL,\n      \"xM:\",\n      xM\n    );\n    console.log(\n      \"buste:\",\n      buste,\n      \"poitrine:\",\n      poitrine,\n      \"taille:\",\n      taille,\n      \"longueurDos:\",\n      longueurDos,\n      \"tourTaille:\",\n      tourTaille,\n      \"carrure:\",\n      carrure,\n      \"distanceEpaules:\",\n      distanceEpaules\n    );\n\n    const widthMax = Math.max(xA, xB, xD, xE, xF, xH, xI, xL, xM) / ptsPerCm;\n    console.log(\"widthMax en points:\", widthMax);\n    const heightMax = Math.max(yA, yB, yD, yE, yF, yH, yI, yL, yM) / ptsPerCm;\n\n    console.log(\"widthMax\", widthMax);\n\n    let svg = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" \n        width=\"${widthMax}cm\" \n        height=\"${heightMax}cm\" \n        viewBox=\"0 0 21cm 29.7cm\">\n    \n\n      <!-- Partie DOS du patron -->\n      <!-- AB: Ligne horizontale en haut -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xB}\" y2=\"${yB}\" stroke=\"blue\" stroke-width=\"2\"/>\n      \n      <!-- AD: Ligne verticale à gauche -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xD}\" y2=\"${yD}\" stroke=\"red\" stroke-width=\"2\"/>\n      \n      <!-- Encolure: G à E -->\n      <path d=\"M${xG} ${yG} Q${\n      (xG + xE) / 2\n    } ${yE}, ${xE} ${yE}\" fill=\"none\" stroke=\"purple\" stroke-width=\"2\"/>\n      \n      <!-- Ligne AE -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xE}\" y2=\"${yE}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne E jusqu'à E1 -->\n      <line x1=\"${xE}\" y1=\"${yE}\" x2=\"${xE1}\" y2=\"${yE1}\" stroke=\"green\" stroke-width=\"2\"/>\n      \n      <!-- Ligne d'épaule G à L1 -->\n      <line x1=\"${xG}\" y1=\"${yG}\" x2=\"${xL1}\" y2=\"${yL1}\" stroke=\"orange\" stroke-width=\"2\"/>\n      \n      <!-- Ligne hauteur d'emmanchure A à F -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xF}\" y2=\"${yF}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne F à F1 (largeur à hauteur d'emmanchure) -->\n      <line x1=\"${xF}\" y1=\"${yF}\" x2=\"${xF1}\" y2=\"${yF1}\" stroke=\"brown\" stroke-width=\"2\"/>\n      \n      <!-- Ligne D à D1 (largeur en bas) -->\n      <line x1=\"${xD}\" y1=\"${yD}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"blue\" stroke-width=\"2\"/>\n      \n      <!-- Ligne de côté F1 à D1 -->\n      <line x1=\"${xF1}\" y1=\"${yF1}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"green\" stroke-width=\"2\"/>\n      \n      <!-- Ligne H à L (descente de 4.5cm) -->\n      <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xL}\" y2=\"${yL}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne H à I (perpendiculaire) -->\n      <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xI}\" y2=\"${yI}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Point M (à partir de I) -->\n      <circle cx=\"${xM}\" cy=\"${yM}\" r=\"3\" fill=\"red\"/>\n      \n      <!-- Emmanchure: courbe de L1 à F1 -->\n      <path d=\"M${xL1} ${yL1} C${controlX1} ${controlY1}, ${controlX2} ${controlY2}, ${xF1} ${yF1}\" fill=\"none\" stroke=\"red\" stroke-width=\"2\"/>\n      \n    </svg>\n    `;\n    return svg;\n  };\n  // Ancien nom : SVGToJPG\n  const generatePDFfromSVG = async (svg) => {\n    try {\n      const responseBase64 = await convertSvgToPdf(svg); // Appelle ton backend\n      console.log(\"Conversion SVG vers PDF réussie\");\n\n      const fileUri = FileSystem.documentDirectory + \"patron.pdf\";\n      \n\n      await FileSystem.writeAsStringAsync(fileUri, responseBase64, {\n        encoding: FileSystem.EncodingType.Base64,\n      });\n\n      await Sharing.shareAsync(fileUri);\n    } catch (error) {\n      console.error(\"Erreur de génération du PDF\", error);\n    }\n  };\n\n  const saveAsPDF = async () => {\n    console.log(\"saveAsPDF called\");\n    const svg = await TracerPatron();\n    console.log(\"SVG généré\", svg);\n    await generatePDFfromSVG(svg); // nouveau nom de fonction\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\n      <View style={styles.container}>\n        <Text style={styles.title}>Patron T-Shirt</Text>\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Taille (hauteur totale en cm)\"\n          keyboardType=\"numeric\"\n          value={taille ? taille.toString() : \"\"}\n          onChangeText={(text) => setTaille(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de poitrine (cm)\"\n          keyboardType=\"numeric\"\n          value={poitrine ? poitrine.toString() : \"\"}\n          onChangeText={(text) => setPoitrine(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Hauteur dos (base du cou à la taille en cm)\"\n          keyboardType=\"numeric\"\n          value={longueurDos ? longueurDos.toString() : \"\"}\n          onChangeText={(text) => setLongueurDos(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de buste (cm)\"\n          keyboardType=\"numeric\"\n          value={buste ? buste.toString() : \"\"}\n          onChangeText={(text) => setBuste(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Distance entre les épaules (cm)\"\n          keyboardType=\"numeric\"\n          value={distanceEpaules ? distanceEpaules.toString() : \"\"}\n          onChangeText={(text) => setDistanceEpaules(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Carrure - largeur du dos (cm)\"\n          keyboardType=\"numeric\"\n          value={carrure ? carrure.toString() : \"\"}\n          onChangeText={(text) => setCarrure(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de taille (cm)\"\n          keyboardType=\"numeric\"\n          value={tourTaille ? tourTaille.toString() : \"\"}\n          onChangeText={(text) => setTourTaille(Number(text))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Longueur cou taille (cm)\"\n          keyboardType=\"numeric\"\n          value={longueurDevant ? longueurDevant.toString() : \"\"}\n          onChangeText={(text) => setLongueurDevant(Number(text))}\n        />\n        <Button title=\"Télécharger en PDF\" onPress={saveAsPDF} />\n        <Button\n          title=\"Télécharger Avec Mensurations\"\n          onPress={setMensurations}\n        />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  input: {\n    width: 300,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n});\n\nexport default Patron;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}