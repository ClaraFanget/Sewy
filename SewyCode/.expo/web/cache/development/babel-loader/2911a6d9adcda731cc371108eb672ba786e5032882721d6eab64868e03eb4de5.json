{"ast":null,"code":"var _jsxFileName = \"/Users/clara/Desktop/Sewy/SewyCode/components/TShirtTest.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Svg, { Rect, Line, Path, Circle } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\nimport * as Print from \"expo-print\";\nimport { PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport * as FileSystem from \"expo-file-system\";\nimport * as Sharing from \"expo-sharing\";\nimport { encode } from \"base64-arraybuffer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TShirtTest() {\n  const [taille, setTaille] = useState(0);\n  const [poitrine, setPoitrine] = useState(0);\n  const [longueurDos, setLongueurDos] = useState(0);\n  const [buste, setBuste] = useState(0);\n  const [distanceEpaules, setDistanceEpaules] = useState(0);\n  const [carrure, setCarrure] = useState(0);\n  const [tourTaille, setTourTaille] = useState(0);\n  const [longueurDevant, setLongueurDevant] = useState(0);\n  const setMensurations = () => {\n    setTaille(165);\n    setPoitrine(88);\n    setLongueurDos(42);\n    setBuste(86);\n    setDistanceEpaules(38);\n    setCarrure(34);\n    setTourTaille(72);\n    setLongueurDevant(48);\n    saveAsPDF();\n  };\n  const saveAsPDF = async () => {\n    const a4Width = 21;\n    const a4Height = 29.7;\n    const ptsPerCm = 72 / 2.54;\n    const a4WidthPts = a4Width * ptsPerCm;\n    const a4HeightPts = a4Height * ptsPerCm;\n    const marginPts = 20;\n    const effectiveWidthPts = a4WidthPts - 2 * marginPts;\n    const effectiveHeightPts = a4HeightPts - 2 * marginPts;\n    let xA = 50;\n    let yA = 50;\n    let xB = xA + (buste / 2 + 4) * ptsPerCm;\n    let yB = yA;\n    let xD = xA;\n    let yD = yA + longueurDos * ptsPerCm;\n    let xE = xA;\n    let yE = yA + (poitrine / 48 + 0.2) * ptsPerCm;\n    let xE1 = xE;\n    let yE1 = yE + 4.5 * ptsPerCm;\n    let hauteurEmmanchure = (taille / 8 + poitrine / 48 + 1.7) * ptsPerCm;\n    let xF = xA;\n    let yF = yA + hauteurEmmanchure;\n    let xG = xA + poitrine / 12 * ptsPerCm;\n    let yG = yA;\n    let xH = xA + carrure / 2 * ptsPerCm;\n    let yH = yA;\n    let xF1 = xF + (buste / 4 + 2) * ptsPerCm;\n    let yF1 = yF;\n    let xD1 = xD + (tourTaille / 4 + 2) * ptsPerCm;\n    let yD1 = yD;\n    let xI = xH;\n    let yI = yF;\n    let xL = xH;\n    let yL = yE1;\n    let xL1 = xE1 + distanceEpaules / 2 * ptsPerCm;\n    let yL1 = yE1;\n    let xM = xI + 0.3 * ptsPerCm;\n    let yM = yI - 5 * ptsPerCm;\n    let controlX1 = (xL1 + xM) / 2 - 4;\n    let controlY1 = yL1 + 150;\n    let controlX2 = xM - 120;\n    let controlY2 = yM + 60;\n    let xF2 = xB;\n    let yF2 = yF;\n    let xC = xB;\n    let yC = yD;\n    let xB1 = xC;\n    let yB1 = yB;\n    let xJ = xB1 - (poitrine / 12 + 1) * ptsPerCm;\n    let yJ = yB1;\n    let xK = xB1 - poitrine / 12 * ptsPerCm;\n    let yK = yB1;\n    let xN = xB1 - (carrure / 2 - 1) * ptsPerCm;\n    let yN = yB1;\n    let xF3 = xF2 - (buste / 4 + 2) * ptsPerCm;\n    let yF3 = yF2;\n    let xL2 = xN;\n    let yL2 = yN + 6.5 * ptsPerCm;\n    let xD2 = xC - (tourTaille / 4 + 2) * ptsPerCm;\n    let yD2 = yC;\n    let xP = xN;\n    let yP = yF2;\n    let xQ = xP;\n    let yQ = yP - 5 * ptsPerCm;\n    let xQ1 = xQ - 0.3 * ptsPerCm;\n    let yQ1 = yQ;\n    let distanceGL1 = Math.sqrt(Math.pow(xG - xL1, 2) + Math.pow(yG - yL1, 2));\n    let angle = Math.atan2(yL1 - yG, xL1 - xG);\n    let xL3 = xK + distanceGL1 * Math.cos(-angle);\n    let yL3 = yK + distanceGL1 * Math.sin(-angle);\n    let controlEncolureX = (xK + xJ) / 2;\n    let controlEncolureY = yK + 5 * ptsPerCm;\n    let controlAvantX1 = (xL3 + xQ1) / 2 + 4;\n    let controlAvantY1 = yL3 + 150;\n    let controlAvantX2 = xQ1 + 120;\n    let controlAvantY2 = yQ1 + 60;\n    let minX = Math.min(xA, xD, xF, xF3, xD2);\n    let maxX = Math.max(xB, xB1, xC, xF1, xD1);\n    let minY = Math.min(yA, yB, yG, yK);\n    let maxY = Math.max(yD, yC, yD1, yD2);\n    minX -= marginPts;\n    minY -= marginPts;\n    maxX += marginPts;\n    maxY += marginPts;\n    let widthTotal = maxX - minX;\n    let heightTotal = maxY - minY;\n    let pagesHorizontal = Math.ceil(widthTotal / effectiveWidthPts);\n    let pagesVertical = Math.ceil(heightTotal / effectiveHeightPts);\n    console.log(`Dimensions totales: ${widthTotal}x${heightTotal} pts`);\n    console.log(`Découpage en: ${pagesHorizontal}x${pagesVertical} pages A4`);\n    let pagesHtml = [];\n    for (let row = 0; row < pagesVertical; row++) {\n      for (let col = 0; col < pagesHorizontal; col++) {\n        let pageMinX = minX + col * effectiveWidthPts;\n        let pageMinY = minY + row * effectiveHeightPts;\n        let pageMaxX = Math.min(pageMinX + effectiveWidthPts, maxX);\n        let pageMaxY = Math.min(pageMinY + effectiveHeightPts, maxY);\n        let pageWidth = pageMaxX - pageMinX;\n        let pageHeight = pageMaxY - pageMinY;\n        let pageSvg = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" \n        width=\"${a4WidthPts}px\" \n        height=\"${a4HeightPts}px\" \n        viewBox=\"${pageMinX} ${pageMinY} ${pageWidth} ${pageHeight}\">\n      <!-- Indicateur de page -->\n      <text x=\"${pageMinX + 20}\" y=\"${pageMinY + 20}\" fill=\"black\" font-size=\"12\">\n        Page ${row * pagesHorizontal + col + 1} de ${pagesHorizontal * pagesVertical} (${col + 1},${row + 1})\n      </text>\n\n      <!-- Partie DOS du patron -->\n      <!-- AB: Ligne horizontale en haut -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xB}\" y2=\"${yB}\" stroke=\"blue\" stroke-width=\"2\"/>\n      \n      <!-- AD: Ligne verticale à gauche -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xD}\" y2=\"${yD}\" stroke=\"red\" stroke-width=\"2\"/>\n      \n      <!-- Encolure: G à E -->\n      <path d=\"M${xG} ${yG} Q${(xG + xE) / 2} ${yE}, ${xE} ${yE}\" fill=\"none\" stroke=\"purple\" stroke-width=\"2\"/>\n      \n      <!-- Ligne AE -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xE}\" y2=\"${yE}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne E jusqu'à E1 -->\n      <line x1=\"${xE}\" y1=\"${yE}\" x2=\"${xE1}\" y2=\"${yE1}\" stroke=\"green\" stroke-width=\"2\"/>\n      \n      <!-- Ligne d'épaule G à L1 -->\n      <line x1=\"${xG}\" y1=\"${yG}\" x2=\"${xL1}\" y2=\"${yL1}\" stroke=\"orange\" stroke-width=\"2\"/>\n      \n      <!-- Ligne hauteur d'emmanchure A à F -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xF}\" y2=\"${yF}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne F à F1 (largeur à hauteur d'emmanchure) -->\n      <line x1=\"${xF}\" y1=\"${yF}\" x2=\"${xF1}\" y2=\"${yF1}\" stroke=\"brown\" stroke-width=\"2\"/>\n      \n      <!-- Ligne D à D1 (largeur en bas) -->\n      <line x1=\"${xD}\" y1=\"${yD}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"blue\" stroke-width=\"2\"/>\n      \n      <!-- Ligne de côté F1 à D1 -->\n      <line x1=\"${xF1}\" y1=\"${yF1}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"green\" stroke-width=\"2\"/>\n      \n      <!-- Ligne H à L (descente de 4.5cm) -->\n      <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xL}\" y2=\"${yL}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne H à I (perpendiculaire) -->\n      <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xI}\" y2=\"${yI}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Point M (à partir de I) -->\n      <circle cx=\"${xM}\" cy=\"${yM}\" r=\"3\" fill=\"red\"/>\n      \n      <!-- Emmanchure: courbe de L1 à F1 -->\n      <path d=\"M${xL1} ${yL1} C${controlX1} ${controlY1}, ${controlX2} ${controlY2}, ${xF1} ${yF1}\" fill=\"none\" stroke=\"red\" stroke-width=\"2\"/>\n      \n      <!-- Points de référence du dos -->\n      <circle cx=\"${xA}\" cy=\"${yA}\" r=\"3\" fill=\"blue\"/> <text x=\"${xA - 10}\" y=\"${yA - 10}\" fill=\"blue\">A</text>\n      <circle cx=\"${xB}\" cy=\"${yB}\" r=\"3\" fill=\"blue\"/> <text x=\"${xB + 10}\" y=\"${yB - 10}\" fill=\"blue\">B</text>\n      <circle cx=\"${xD}\" cy=\"${yD}\" r=\"3\" fill=\"red\"/> <text x=\"${xD - 20}\" y=\"${yD + 10}\" fill=\"red\">D</text>\n      <circle cx=\"${xD1}\" cy=\"${yD1}\" r=\"3\" fill=\"blue\"/> <text x=\"${xD1 + 10}\" y=\"${yD1 + 10}\" fill=\"blue\">D1</text>\n      <circle cx=\"${xE}\" cy=\"${yE}\" r=\"3\" fill=\"green\"/> <text x=\"${xE - 20}\" y=\"${yE + 5}\" fill=\"green\">E</text>\n      <circle cx=\"${xE1}\" cy=\"${yE1}\" r=\"3\" fill=\"green\"/> <text x=\"${xE1 - 20}\" y=\"${yE1 + 5}\" fill=\"green\">E1</text>\n      <circle cx=\"${xF}\" cy=\"${yF}\" r=\"3\" fill=\"brown\"/> <text x=\"${xF - 20}\" y=\"${yF + 5}\" fill=\"brown\">F</text>\n      <circle cx=\"${xF1}\" cy=\"${yF1}\" r=\"3\" fill=\"brown\"/> <text x=\"${xF1 + 10}\" y=\"${yF1 + 5}\" fill=\"brown\">F1</text>\n      <circle cx=\"${xG}\" cy=\"${yG}\" r=\"3\" fill=\"orange\"/> <text x=\"${xG}\" y=\"${yG - 10}\" fill=\"orange\">G</text>\n      <circle cx=\"${xH}\" cy=\"${yH}\" r=\"3\" fill=\"purple\"/> <text x=\"${xH - 5}\" y=\"${yH - 10}\" fill=\"purple\">H</text>\n      <circle cx=\"${xI}\" cy=\"${yI}\" r=\"3\" fill=\"purple\"/> <text x=\"${xI + 10}\" y=\"${yI - 10}\" fill=\"purple\">I</text>\n      <circle cx=\"${xL}\" cy=\"${yL}\" r=\"3\" fill=\"purple\"/> <text x=\"${xL - 20}\" y=\"${yL + 5}\" fill=\"purple\">L</text>\n      <circle cx=\"${xL1}\" cy=\"${yL1}\" r=\"3\" fill=\"orange\"/> <text x=\"${xL1}\" y=\"${yL1 - 10}\" fill=\"orange\">L1</text>\n      <circle cx=\"${xM}\" cy=\"${yM}\" r=\"3\" fill=\"red\"/> <text x=\"${xM + 10}\" y=\"${yM + 5}\" fill=\"red\">M</text>\n      \n      <!-- PARTIE DEVANT du patron -->\n      <!-- BC: Ligne verticale à droite -->\n      <line x1=\"${xB}\" y1=\"${yB}\" x2=\"${xC}\" y2=\"${yC}\" stroke=\"red\" stroke-width=\"2\"/>\n      \n      <!-- CB1: Ligne verticale (normalement pas nécessaire car B1 = B) -->\n      <line x1=\"${xC}\" y1=\"${yC}\" x2=\"${xB1}\" y2=\"${yB1}\" stroke=\"red\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Encolure avant: K à J -->\n      <path d=\"M${xK} ${yK} Q${controlEncolureX} ${controlEncolureY}, ${xJ} ${yJ}\" fill=\"none\" stroke=\"purple\" stroke-width=\"2\"/>\n      \n      <!-- Ligne B1J -->\n      <line x1=\"${xB1}\" y1=\"${yB1}\" x2=\"${xJ}\" y2=\"${yJ}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne B1K -->\n      <line x1=\"${xB1}\" y1=\"${yB1}\" x2=\"${xK}\" y2=\"${yK}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne B1N -->\n      <line x1=\"${xB1}\" y1=\"${yB1}\" x2=\"${xN}\" y2=\"${yN}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne NL2 -->\n      <line x1=\"${xN}\" y1=\"${yN}\" x2=\"${xL2}\" y2=\"${yL2}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne d'épaule K à L3 -->\n      <line x1=\"${xK}\" y1=\"${yK}\" x2=\"${xL3}\" y2=\"${yL3}\" stroke=\"orange\" stroke-width=\"2\"/>\n      \n      <!-- Ligne hauteur d'emmanchure B à F2 -->\n      <line x1=\"${xB}\" y1=\"${yB}\" x2=\"${xF2}\" y2=\"${yF2}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne F2 à F3 (largeur à hauteur d'emmanchure) -->\n      <line x1=\"${xF2}\" y1=\"${yF2}\" x2=\"${xF3}\" y2=\"${yF3}\" stroke=\"brown\" stroke-width=\"2\"/>\n      \n      <!-- Ligne C à D2 (largeur en bas) -->\n      <line x1=\"${xC}\" y1=\"${yC}\" x2=\"${xD2}\" y2=\"${yD2}\" stroke=\"blue\" stroke-width=\"2\"/>\n      \n      <!-- Ligne de côté F3 à D2 -->\n      <line x1=\"${xF3}\" y1=\"${yF3}\" x2=\"${xD2}\" y2=\"${yD2}\" stroke=\"green\" stroke-width=\"2\"/>\n      \n      <!-- Ligne NP (perpendiculaire) -->\n      <line x1=\"${xN}\" y1=\"${yN}\" x2=\"${xP}\" y2=\"${yP}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne PQ (remonter de 5cm) -->\n      <line x1=\"${xP}\" y1=\"${yP}\" x2=\"${xQ}\" y2=\"${yQ}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne QQ1 (aller vers la gauche de 0.3cm) -->\n      <line x1=\"${xQ}\" y1=\"${yQ}\" x2=\"${xQ1}\" y2=\"${yQ1}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Emmanchure avant: courbe de L3 à Q1 à F3 -->\n      <path d=\"M${xL3} ${yL3} C${controlAvantX1} ${controlAvantY1}, ${controlAvantX2} ${controlAvantY2}, ${xF3} ${yF3}\" fill=\"none\" stroke=\"red\" stroke-width=\"2\"/>\n      \n      <!-- Points de référence du devant -->\n      <circle cx=\"${xB1}\" cy=\"${yB1}\" r=\"3\" fill=\"blue\"/> <text x=\"${xB1 + 10}\" y=\"${yB1 - 10}\" fill=\"blue\">B1</text>\n      <circle cx=\"${xC}\" cy=\"${yC}\" r=\"3\" fill=\"red\"/> <text x=\"${xC + 20}\" y=\"${yC + 10}\" fill=\"red\">C</text>\n      <circle cx=\"${xD2}\" cy=\"${yD2}\" r=\"3\" fill=\"blue\"/> <text x=\"${xD2 - 10}\" y=\"${yD2 + 10}\" fill=\"blue\">D2</text>\n      <circle cx=\"${xF2}\" cy=\"${yF2}\" r=\"3\" fill=\"brown\"/> <text x=\"${xF2 + 20}\" y=\"${yF2 + 5}\" fill=\"brown\">F2</text>\n      <circle cx=\"${xF3}\" cy=\"${yF3}\" r=\"3\" fill=\"brown\"/> <text x=\"${xF3 - 10}\" y=\"${yF3 + 5}\" fill=\"brown\">F3</text>\n      <circle cx=\"${xJ}\" cy=\"${yJ}\" r=\"3\" fill=\"green\"/> <text x=\"${xJ - 5}\" y=\"${yJ - 10}\" fill=\"green\">J</text>\n      <circle cx=\"${xK}\" cy=\"${yK}\" r=\"3\" fill=\"orange\"/> <text x=\"${xK - 5}\" y=\"${yK - 10}\" fill=\"orange\">K</text>\n      <circle cx=\"${xL2}\" cy=\"${yL2}\" r=\"3\" fill=\"purple\"/> <text x=\"${xL2 + 20}\" y=\"${yL2 + 5}\" fill=\"purple\">L2</text>\n      <circle cx=\"${xL3}\" cy=\"${yL3}\" r=\"3\" fill=\"orange\"/> <text x=\"${xL3 - 5}\" y=\"${yL3 - 10}\" fill=\"orange\">L3</text>\n      <circle cx=\"${xN}\" cy=\"${yN}\" r=\"3\" fill=\"purple\"/> <text x=\"${xN + 5}\" y=\"${yN - 10}\" fill=\"purple\">N</text>\n      <circle cx=\"${xP}\" cy=\"${yP}\" r=\"3\" fill=\"purple\"/> <text x=\"${xP + 10}\" y=\"${yP + 5}\" fill=\"purple\">P</text>\n      <circle cx=\"${xQ}\" cy=\"${yQ}\" r=\"3\" fill=\"purple\"/> <text x=\"${xQ + 10}\" y=\"${yQ - 10}\" fill=\"purple\">Q</text>\n      <circle cx=\"${xQ1}\" cy=\"${yQ1}\" r=\"3\" fill=\"red\"/> <text x=\"${xQ1 - 10}\" y=\"${yQ1 - 10}\" fill=\"red\">Q1</text>\n\n      <!-- Guides d'assemblage - Lignes verticales -->\n      ${col < pagesHorizontal - 1 ? `<line x1=\"${pageMaxX}\" y1=\"${pageMinY}\" x2=\"${pageMaxX}\" y2=\"${pageMaxY}\" \n            stroke=\"black\" stroke-width=\"1\" stroke-dasharray=\"5,5\"/>` : \"\"}\n      \n      <!-- Guides d'assemblage - Lignes horizontales -->\n      ${row < pagesVertical - 1 ? `<line x1=\"${pageMinX}\" y1=\"${pageMaxY}\" x2=\"${pageMaxX}\" y2=\"${pageMaxY}\" \n            stroke=\"black\" stroke-width=\"1\" stroke-dasharray=\"5,5\"/>` : \"\"}\n    </svg>\n    `;\n        let pageHtml = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <title>Patron T-Shirt - Page ${row * pagesHorizontal + col + 1}</title>\n      <style>\n        body { margin: 0; padding: 0; }\n        .page-info { \n          position: absolute; \n          top: 5px; \n          left: 5px; \n          font-family: Arial; \n          font-size: 10pt; \n          color: #999;\n          z-index: 100;\n        }\n        svg {\n          margin: 0;\n          padding: 0;\n          width: 100%;\n          height: 100vh;\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"page-info\">\n        Patron T-Shirt - Page ${row * pagesHorizontal + col + 1} de ${pagesHorizontal * pagesVertical}\n      </div>\n      ${pageSvg}\n    </body>\n    </html>\n    `;\n        pagesHtml.push(pageHtml);\n      }\n    }\n    let htmlContent = pagesHtml[0];\n    let pdfFiles = [];\n    for (let i = 0; i < pagesHtml.length; i++) {\n      const file = await printToFileAsync({\n        html: pagesHtml[i],\n        base64: false,\n        margins: {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0\n        }\n      });\n      pdfFiles.push(file.uri);\n    }\n    if (pdfFiles.length > 1) {\n      const mergedPdf = await PDFDocument.create();\n      for (let i = 0; i < pdfFiles.length; i++) {\n        const pdfData = await FileSystem.readAsStringAsync(pdfFiles[i], {\n          encoding: FileSystem.EncodingType.Base64\n        });\n        const pdfDoc = await PDFDocument.load(pdfData);\n        const pages = await mergedPdf.copyPages(pdfDoc, pdfDoc.getPageIndices());\n        for (const page of pages) {\n          mergedPdf.addPage(page);\n        }\n      }\n      const mergedPdfBytes = await mergedPdf.save();\n      const base64String = encode(mergedPdfBytes);\n      const mergedPdfPath = FileSystem.documentDirectory + \"patron_tshirt.pdf\";\n      await FileSystem.writeAsStringAsync(mergedPdfPath, base64String, {\n        encoding: FileSystem.EncodingType.Base64\n      });\n      await shareAsync(mergedPdfPath);\n      for (let file of pdfFiles) {\n        try {\n          await FileSystem.deleteAsync(file);\n        } catch (error) {\n          console.log(\"Erreur lors de la suppression d'un fichier temporaire:\", error);\n        }\n      }\n    } else {\n      await shareAsync(pdfFiles[0]);\n    }\n  };\n  const hundleCarre = async () => {\n    const largeur = 5;\n    console.log(\"largeur2\", largeur);\n    let htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head >\n        <meta charset=\"utf-8\">\n        <title>Rectangle PDF</title>\n      </head>\n      <body>\n        <svg \n             width=\"21cm\" \n             height=\"29.7cm\" \n             xmlns=\"http://www.w3.org/2000/svg\">\n          <rect x=\"20\" y=\"20\" \n                width=\"${largeur}cm\" \n                height=\"${largeur}cm\" \n                stroke=\"black\" \n                stroke-width=\"1\" \n                fill=\"none\"/>\n        </svg>\n      </body>\n      </html>\n    `;\n    console.log(\"hundleCarre called 2\");\n    const file = await printToFileAsync({\n      html: htmlContent,\n      base64: false,\n      margins: {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      }\n    });\n    await shareAsync(file.uri);\n  };\n  return _jsxDEV(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Patron T-Shirt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Taille (hauteur totale en cm)\",\n        keyboardType: \"numeric\",\n        value: taille ? taille.toString() : \"\",\n        onChangeText: text => setTaille(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de poitrine (cm)\",\n        keyboardType: \"numeric\",\n        value: poitrine ? poitrine.toString() : \"\",\n        onChangeText: text => setPoitrine(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Hauteur dos (base du cou \\xE0 la taille en cm)\",\n        keyboardType: \"numeric\",\n        value: longueurDos ? longueurDos.toString() : \"\",\n        onChangeText: text => setLongueurDos(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de buste (cm)\",\n        keyboardType: \"numeric\",\n        value: buste ? buste.toString() : \"\",\n        onChangeText: text => setBuste(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Distance entre les \\xE9paules (cm)\",\n        keyboardType: \"numeric\",\n        value: distanceEpaules ? distanceEpaules.toString() : \"\",\n        onChangeText: text => setDistanceEpaules(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Carrure - largeur du dos (cm)\",\n        keyboardType: \"numeric\",\n        value: carrure ? carrure.toString() : \"\",\n        onChangeText: text => setCarrure(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de taille (cm)\",\n        keyboardType: \"numeric\",\n        value: tourTaille ? tourTaille.toString() : \"\",\n        onChangeText: text => setTourTaille(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Longueur cou taille (cm)\",\n        keyboardType: \"numeric\",\n        value: longueurDevant ? longueurDevant.toString() : \"\",\n        onChangeText: text => setLongueurDevant(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"T\\xE9l\\xE9charger en PDF\",\n        onPress: saveAsPDF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"T\\xE9l\\xE9charger Avec Mensurations\",\n        onPress: setMensurations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Trac\\xE9 carr\\xE9\",\n        onPress: () => {\n          hundleCarre();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 585,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  input: {\n    width: 300,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10\n  }\n});\nexport default TShirtTest;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","Keyboard","TouchableWithoutFeedback","ScrollView","Svg","Rect","Line","Path","Circle","printToFileAsync","shareAsync","Print","PDFDocument","rgb","StandardFonts","FileSystem","Sharing","encode","jsxDEV","_jsxDEV","TShirtTest","taille","setTaille","poitrine","setPoitrine","longueurDos","setLongueurDos","buste","setBuste","distanceEpaules","setDistanceEpaules","carrure","setCarrure","tourTaille","setTourTaille","longueurDevant","setLongueurDevant","setMensurations","saveAsPDF","a4Width","a4Height","ptsPerCm","a4WidthPts","a4HeightPts","marginPts","effectiveWidthPts","effectiveHeightPts","xA","yA","xB","yB","xD","yD","xE","yE","xE1","yE1","hauteurEmmanchure","xF","yF","xG","yG","xH","yH","xF1","yF1","xD1","yD1","xI","yI","xL","yL","xL1","yL1","xM","yM","controlX1","controlY1","controlX2","controlY2","xF2","yF2","xC","yC","xB1","yB1","xJ","yJ","xK","yK","xN","yN","xF3","yF3","xL2","yL2","xD2","yD2","xP","yP","xQ","yQ","xQ1","yQ1","distanceGL1","Math","sqrt","pow","angle","atan2","xL3","cos","yL3","sin","controlEncolureX","controlEncolureY","controlAvantX1","controlAvantY1","controlAvantX2","controlAvantY2","minX","min","maxX","max","minY","maxY","widthTotal","heightTotal","pagesHorizontal","ceil","pagesVertical","console","log","pagesHtml","row","col","pageMinX","pageMinY","pageMaxX","pageMaxY","pageWidth","pageHeight","pageSvg","pageHtml","push","htmlContent","pdfFiles","i","length","file","html","base64","margins","left","top","right","bottom","uri","mergedPdf","create","pdfData","readAsStringAsync","encoding","EncodingType","Base64","pdfDoc","load","pages","copyPages","getPageIndices","page","addPage","mergedPdfBytes","save","base64String","mergedPdfPath","documentDirectory","writeAsStringAsync","deleteAsync","error","hundleCarre","largeur","onPress","dismiss","accessible","children","style","styles","container","title","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","keyboardType","value","toString","onChangeText","text","Number","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","width","borderWidth","borderColor","borderRadius"],"sources":["/Users/clara/Desktop/Sewy/SewyCode/components/TShirtTest.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  TextInput,\n  Button,\n  Text,\n  StyleSheet,\n  Keyboard,\n  TouchableWithoutFeedback,\n  ScrollView,\n} from \"react-native\";\nimport Svg, { Rect, Line, Path, Circle } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\nimport * as Print from \"expo-print\";\nimport { PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport * as FileSystem from \"expo-file-system\";\nimport * as Sharing from \"expo-sharing\";\nimport { encode } from \"base64-arraybuffer\";\n\nexport function TShirtTest() {\n  const [taille, setTaille] = useState(0); // Hauteur totale (tête aux pieds)\n  const [poitrine, setPoitrine] = useState(0); // Tour de poitrine\n  const [longueurDos, setLongueurDos] = useState(0); // Hauteur dos (base du cou à la taille)\n  const [buste, setBuste] = useState(0); // Tour de buste\n  const [distanceEpaules, setDistanceEpaules] = useState(0); // Distance entre les deux épaules\n  const [carrure, setCarrure] = useState(0); // Largeur du dos sous les aisselles\n  const [tourTaille, setTourTaille] = useState(0); // Tour de taille\n  const [longueurDevant, setLongueurDevant] = useState(0);\n\n  const setMensurations = () => {\n    setTaille(165);\n    setPoitrine(88);\n    setLongueurDos(42);\n    setBuste(86);\n    setDistanceEpaules(38);\n    setCarrure(34);\n    setTourTaille(72);\n    setLongueurDevant(48);\n    saveAsPDF();\n  };\n\n  const saveAsPDF = async () => {\n    // Définition de l'échelle pour le PDF\n    const a4Width = 21; // largeur A4 en cm\n    const a4Height = 29.7; // hauteur A4 en cm\n    const ptsPerCm = 72 / 2.54; // conversion cm en points\n    const a4WidthPts = a4Width * ptsPerCm;\n    const a4HeightPts = a4Height * ptsPerCm;\n\n    // Marge pour les pages\n    const marginPts = 20;\n    const effectiveWidthPts = a4WidthPts - 2 * marginPts;\n    const effectiveHeightPts = a4HeightPts - 2 * marginPts;\n\n    // ------ PARTIE DOS DU PATRON ------\n\n    // Point A - Point de départ en haut à gauche\n    let xA = 50;\n    let yA = 50;\n\n    // AB = tour de buste/2 + 4 cm d'aisance\n    let xB = xA + (buste / 2 + 4) * ptsPerCm;\n    let yB = yA;\n\n    // AD = hauteur dos (base du cou à la taille)\n    let xD = xA;\n    let yD = yA + longueurDos * ptsPerCm;\n\n    // AE = 1/48 tour de poitrine + 0.2 cm\n    let xE = xA;\n    let yE = yA + (poitrine / 48 + 0.2) * ptsPerCm;\n\n    // AE1 = descendre de 4.5 cm\n    let xE1 = xE;\n    let yE1 = yE + 4.5 * ptsPerCm;\n\n    // AF = 1/8 hauteur + 1/48 tour de poitrine + 1.7 cm (hauteur d'emmanchure)\n    let hauteurEmmanchure = (taille / 8 + poitrine / 48 + 1.7) * ptsPerCm;\n    let xF = xA;\n    let yF = yA + hauteurEmmanchure;\n\n    // AG = 1/12 tour de poitrine\n    let xG = xA + (poitrine / 12) * ptsPerCm;\n    let yG = yA;\n\n    // AH = 1/2 carrure (largeur du dos)\n    let xH = xA + (carrure / 2) * ptsPerCm;\n    let yH = yA; // H est au même niveau que F (hauteur d'emmanchure)\n\n    // FF1 = 1/4 tour de buste + 2 cm d'aisance\n    let xF1 = xF + (buste / 4 + 2) * ptsPerCm;\n    let yF1 = yF;\n\n    // DD1 = 1/4 tour de taille + 2 cm d'aisance\n    let xD1 = xD + (tourTaille / 4 + 2) * ptsPerCm;\n    let yD1 = yD;\n\n    // HI = perpendiculaire à FF1 (I est au même x que F1)\n    let xI = xH;\n    let yI = yF;\n\n    // HL = descendre de 4.5 cm\n    let xL = xH;\n    let yL = yE1;\n\n    // E1L1 = 1/2 distance entre les deux épaules\n    let xL1 = xE1 + (distanceEpaules / 2) * ptsPerCm;\n    let yL1 = yE1;\n\n    // IM = remonter de 5 cm et aller vers la droite de 0.3 cm\n    let xM = xI + 0.3 * ptsPerCm;\n    let yM = yI - 5 * ptsPerCm;\n\n    // Point de contrôle pour la courbe d'emmanchure\n    let controlX1 = (xL1 + xM) / 2 - 4;\n    let controlY1 = yL1 + 150;\n\n    let controlX2 = xM - 120;\n    let controlY2 = yM + 60;\n\n    // ------ PARTIE DEVANT DU PATRON ------\n    // BF2 = AF (même hauteur d'emmanchure)\n    let xF2 = xB;\n    let yF2 = yF;\n\n    // BC = AD (même hauteur du patron)\n    let xC = xB;\n    let yC = yD;\n\n    // CB1 = longueur cou-taille mesurée devant\n    let xB1 = xC;\n    let yB1 = yB;\n\n    // B1J = 1/12 tour de poitrine + 1 cm (profondeur d'encolure)\n    let xJ = xB1 - (poitrine / 12 + 1) * ptsPerCm;\n    let yJ = yB1;\n\n    // B1K = 1/12 tour de poitrine (point de départ de l'épaule)\n    let xK = xB1 - (poitrine / 12) * ptsPerCm;\n    let yK = yB1;\n\n    // B1N = 1/2 carrure – 1 cm\n    let xN = xB1 - (carrure / 2 - 1) * ptsPerCm;\n    let yN = yB1;\n\n    // F2F3 = FF1 = 1/4 tour de buste + aisance (2cm)\n    let xF3 = xF2 - (buste / 4 + 2) * ptsPerCm;\n    let yF3 = yF2;\n\n    // NL2 = descendre de 6,5 cm\n    let xL2 = xN;\n    let yL2 = yN + 6.5 * ptsPerCm;\n\n    // CD2 = 1/4 tour de taille + aisance\n    let xD2 = xC - (tourTaille / 4 + 2) * ptsPerCm;\n    let yD2 = yC;\n\n    // NP = perpendiculaire à F2F3, P étant le point d'intersection\n    let xP = xN;\n    let yP = yF2;\n\n    // PQ = remonter de 5 cm\n    let xQ = xP;\n    let yQ = yP - 5 * ptsPerCm;\n\n    // QQ1 = aller vers la gauche de 0,3 cm\n    let xQ1 = xQ - 0.3 * ptsPerCm;\n    let yQ1 = yQ;\n\n    // KL3 = GL1 (même distance pour l'épaule avant que pour l'épaule arrière)\n    let distanceGL1 = Math.sqrt(Math.pow(xG - xL1, 2) + Math.pow(yG - yL1, 2));\n    let angle = Math.atan2(yL1 - yG, xL1 - xG);\n    // Pour KL3, on utilisera l'angle mais dans la direction opposée (de K vers L3)\n    let xL3 = xK + distanceGL1 * Math.cos(-angle);\n    let yL3 = yK + distanceGL1 * Math.sin(-angle);\n\n    // Points de contrôle pour la courbe d'encolure avant (KJ)\n    let controlEncolureX = (xK + xJ) / 2;\n    let controlEncolureY = yK + 5 * ptsPerCm;\n\n    // Points de contrôle pour la courbe d'emmanchure avant (L3 à Q1 à F3)\n    let controlAvantX1 = (xL3 + xQ1) / 2 + 4;\n    let controlAvantY1 = yL3 + 150;\n\n    let controlAvantX2 = xQ1 + 120;\n    let controlAvantY2 = yQ1 + 60;\n\n    // Calculer les dimensions totales du patron\n    let minX = Math.min(xA, xD, xF, xF3, xD2);\n    let maxX = Math.max(xB, xB1, xC, xF1, xD1);\n    let minY = Math.min(yA, yB, yG, yK);\n    let maxY = Math.max(yD, yC, yD1, yD2);\n\n    // Ajouter une marge\n    minX -= marginPts;\n    minY -= marginPts;\n    maxX += marginPts;\n    maxY += marginPts;\n\n    let widthTotal = maxX - minX;\n    let heightTotal = maxY - minY;\n\n    // Calculer combien de pages sont nécessaires\n    let pagesHorizontal = Math.ceil(widthTotal / effectiveWidthPts);\n    let pagesVertical = Math.ceil(heightTotal / effectiveHeightPts);\n\n    console.log(`Dimensions totales: ${widthTotal}x${heightTotal} pts`);\n    console.log(`Découpage en: ${pagesHorizontal}x${pagesVertical} pages A4`);\n\n    // Créer un tableau pour stocker le HTML de chaque page\n    let pagesHtml = [];\n\n    // Générer le HTML pour chaque page\n    for (let row = 0; row < pagesVertical; row++) {\n      for (let col = 0; col < pagesHorizontal; col++) {\n        // Calculer les limites de cette page (viewBox)\n        let pageMinX = minX + col * effectiveWidthPts;\n        let pageMinY = minY + row * effectiveHeightPts;\n        let pageMaxX = Math.min(pageMinX + effectiveWidthPts, maxX);\n        let pageMaxY = Math.min(pageMinY + effectiveHeightPts, maxY);\n        let pageWidth = pageMaxX - pageMinX;\n        let pageHeight = pageMaxY - pageMinY;\n\n        // Créer le SVG pour cette page\n        let pageSvg = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" \n        width=\"${a4WidthPts}px\" \n        height=\"${a4HeightPts}px\" \n        viewBox=\"${pageMinX} ${pageMinY} ${pageWidth} ${pageHeight}\">\n      <!-- Indicateur de page -->\n      <text x=\"${pageMinX + 20}\" y=\"${\n          pageMinY + 20\n        }\" fill=\"black\" font-size=\"12\">\n        Page ${row * pagesHorizontal + col + 1} de ${\n          pagesHorizontal * pagesVertical\n        } (${col + 1},${row + 1})\n      </text>\n\n      <!-- Partie DOS du patron -->\n      <!-- AB: Ligne horizontale en haut -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xB}\" y2=\"${yB}\" stroke=\"blue\" stroke-width=\"2\"/>\n      \n      <!-- AD: Ligne verticale à gauche -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xD}\" y2=\"${yD}\" stroke=\"red\" stroke-width=\"2\"/>\n      \n      <!-- Encolure: G à E -->\n      <path d=\"M${xG} ${yG} Q${\n          (xG + xE) / 2\n        } ${yE}, ${xE} ${yE}\" fill=\"none\" stroke=\"purple\" stroke-width=\"2\"/>\n      \n      <!-- Ligne AE -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xE}\" y2=\"${yE}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne E jusqu'à E1 -->\n      <line x1=\"${xE}\" y1=\"${yE}\" x2=\"${xE1}\" y2=\"${yE1}\" stroke=\"green\" stroke-width=\"2\"/>\n      \n      <!-- Ligne d'épaule G à L1 -->\n      <line x1=\"${xG}\" y1=\"${yG}\" x2=\"${xL1}\" y2=\"${yL1}\" stroke=\"orange\" stroke-width=\"2\"/>\n      \n      <!-- Ligne hauteur d'emmanchure A à F -->\n      <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xF}\" y2=\"${yF}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne F à F1 (largeur à hauteur d'emmanchure) -->\n      <line x1=\"${xF}\" y1=\"${yF}\" x2=\"${xF1}\" y2=\"${yF1}\" stroke=\"brown\" stroke-width=\"2\"/>\n      \n      <!-- Ligne D à D1 (largeur en bas) -->\n      <line x1=\"${xD}\" y1=\"${yD}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"blue\" stroke-width=\"2\"/>\n      \n      <!-- Ligne de côté F1 à D1 -->\n      <line x1=\"${xF1}\" y1=\"${yF1}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"green\" stroke-width=\"2\"/>\n      \n      <!-- Ligne H à L (descente de 4.5cm) -->\n      <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xL}\" y2=\"${yL}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne H à I (perpendiculaire) -->\n      <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xI}\" y2=\"${yI}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Point M (à partir de I) -->\n      <circle cx=\"${xM}\" cy=\"${yM}\" r=\"3\" fill=\"red\"/>\n      \n      <!-- Emmanchure: courbe de L1 à F1 -->\n      <path d=\"M${xL1} ${yL1} C${controlX1} ${controlY1}, ${controlX2} ${controlY2}, ${xF1} ${yF1}\" fill=\"none\" stroke=\"red\" stroke-width=\"2\"/>\n      \n      <!-- Points de référence du dos -->\n      <circle cx=\"${xA}\" cy=\"${yA}\" r=\"3\" fill=\"blue\"/> <text x=\"${\n          xA - 10\n        }\" y=\"${yA - 10}\" fill=\"blue\">A</text>\n      <circle cx=\"${xB}\" cy=\"${yB}\" r=\"3\" fill=\"blue\"/> <text x=\"${\n          xB + 10\n        }\" y=\"${yB - 10}\" fill=\"blue\">B</text>\n      <circle cx=\"${xD}\" cy=\"${yD}\" r=\"3\" fill=\"red\"/> <text x=\"${\n          xD - 20\n        }\" y=\"${yD + 10}\" fill=\"red\">D</text>\n      <circle cx=\"${xD1}\" cy=\"${yD1}\" r=\"3\" fill=\"blue\"/> <text x=\"${\n          xD1 + 10\n        }\" y=\"${yD1 + 10}\" fill=\"blue\">D1</text>\n      <circle cx=\"${xE}\" cy=\"${yE}\" r=\"3\" fill=\"green\"/> <text x=\"${\n          xE - 20\n        }\" y=\"${yE + 5}\" fill=\"green\">E</text>\n      <circle cx=\"${xE1}\" cy=\"${yE1}\" r=\"3\" fill=\"green\"/> <text x=\"${\n          xE1 - 20\n        }\" y=\"${yE1 + 5}\" fill=\"green\">E1</text>\n      <circle cx=\"${xF}\" cy=\"${yF}\" r=\"3\" fill=\"brown\"/> <text x=\"${\n          xF - 20\n        }\" y=\"${yF + 5}\" fill=\"brown\">F</text>\n      <circle cx=\"${xF1}\" cy=\"${yF1}\" r=\"3\" fill=\"brown\"/> <text x=\"${\n          xF1 + 10\n        }\" y=\"${yF1 + 5}\" fill=\"brown\">F1</text>\n      <circle cx=\"${xG}\" cy=\"${yG}\" r=\"3\" fill=\"orange\"/> <text x=\"${xG}\" y=\"${\n          yG - 10\n        }\" fill=\"orange\">G</text>\n      <circle cx=\"${xH}\" cy=\"${yH}\" r=\"3\" fill=\"purple\"/> <text x=\"${\n          xH - 5\n        }\" y=\"${yH - 10}\" fill=\"purple\">H</text>\n      <circle cx=\"${xI}\" cy=\"${yI}\" r=\"3\" fill=\"purple\"/> <text x=\"${\n          xI + 10\n        }\" y=\"${yI - 10}\" fill=\"purple\">I</text>\n      <circle cx=\"${xL}\" cy=\"${yL}\" r=\"3\" fill=\"purple\"/> <text x=\"${\n          xL - 20\n        }\" y=\"${yL + 5}\" fill=\"purple\">L</text>\n      <circle cx=\"${xL1}\" cy=\"${yL1}\" r=\"3\" fill=\"orange\"/> <text x=\"${xL1}\" y=\"${\n          yL1 - 10\n        }\" fill=\"orange\">L1</text>\n      <circle cx=\"${xM}\" cy=\"${yM}\" r=\"3\" fill=\"red\"/> <text x=\"${\n          xM + 10\n        }\" y=\"${yM + 5}\" fill=\"red\">M</text>\n      \n      <!-- PARTIE DEVANT du patron -->\n      <!-- BC: Ligne verticale à droite -->\n      <line x1=\"${xB}\" y1=\"${yB}\" x2=\"${xC}\" y2=\"${yC}\" stroke=\"red\" stroke-width=\"2\"/>\n      \n      <!-- CB1: Ligne verticale (normalement pas nécessaire car B1 = B) -->\n      <line x1=\"${xC}\" y1=\"${yC}\" x2=\"${xB1}\" y2=\"${yB1}\" stroke=\"red\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Encolure avant: K à J -->\n      <path d=\"M${xK} ${yK} Q${controlEncolureX} ${controlEncolureY}, ${xJ} ${yJ}\" fill=\"none\" stroke=\"purple\" stroke-width=\"2\"/>\n      \n      <!-- Ligne B1J -->\n      <line x1=\"${xB1}\" y1=\"${yB1}\" x2=\"${xJ}\" y2=\"${yJ}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne B1K -->\n      <line x1=\"${xB1}\" y1=\"${yB1}\" x2=\"${xK}\" y2=\"${yK}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne B1N -->\n      <line x1=\"${xB1}\" y1=\"${yB1}\" x2=\"${xN}\" y2=\"${yN}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne NL2 -->\n      <line x1=\"${xN}\" y1=\"${yN}\" x2=\"${xL2}\" y2=\"${yL2}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne d'épaule K à L3 -->\n      <line x1=\"${xK}\" y1=\"${yK}\" x2=\"${xL3}\" y2=\"${yL3}\" stroke=\"orange\" stroke-width=\"2\"/>\n      \n      <!-- Ligne hauteur d'emmanchure B à F2 -->\n      <line x1=\"${xB}\" y1=\"${yB}\" x2=\"${xF2}\" y2=\"${yF2}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne F2 à F3 (largeur à hauteur d'emmanchure) -->\n      <line x1=\"${xF2}\" y1=\"${yF2}\" x2=\"${xF3}\" y2=\"${yF3}\" stroke=\"brown\" stroke-width=\"2\"/>\n      \n      <!-- Ligne C à D2 (largeur en bas) -->\n      <line x1=\"${xC}\" y1=\"${yC}\" x2=\"${xD2}\" y2=\"${yD2}\" stroke=\"blue\" stroke-width=\"2\"/>\n      \n      <!-- Ligne de côté F3 à D2 -->\n      <line x1=\"${xF3}\" y1=\"${yF3}\" x2=\"${xD2}\" y2=\"${yD2}\" stroke=\"green\" stroke-width=\"2\"/>\n      \n      <!-- Ligne NP (perpendiculaire) -->\n      <line x1=\"${xN}\" y1=\"${yN}\" x2=\"${xP}\" y2=\"${yP}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne PQ (remonter de 5cm) -->\n      <line x1=\"${xP}\" y1=\"${yP}\" x2=\"${xQ}\" y2=\"${yQ}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Ligne QQ1 (aller vers la gauche de 0.3cm) -->\n      <line x1=\"${xQ}\" y1=\"${yQ}\" x2=\"${xQ1}\" y2=\"${yQ1}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n      \n      <!-- Emmanchure avant: courbe de L3 à Q1 à F3 -->\n      <path d=\"M${xL3} ${yL3} C${controlAvantX1} ${controlAvantY1}, ${controlAvantX2} ${controlAvantY2}, ${xF3} ${yF3}\" fill=\"none\" stroke=\"red\" stroke-width=\"2\"/>\n      \n      <!-- Points de référence du devant -->\n      <circle cx=\"${xB1}\" cy=\"${yB1}\" r=\"3\" fill=\"blue\"/> <text x=\"${\n          xB1 + 10\n        }\" y=\"${yB1 - 10}\" fill=\"blue\">B1</text>\n      <circle cx=\"${xC}\" cy=\"${yC}\" r=\"3\" fill=\"red\"/> <text x=\"${\n          xC + 20\n        }\" y=\"${yC + 10}\" fill=\"red\">C</text>\n      <circle cx=\"${xD2}\" cy=\"${yD2}\" r=\"3\" fill=\"blue\"/> <text x=\"${\n          xD2 - 10\n        }\" y=\"${yD2 + 10}\" fill=\"blue\">D2</text>\n      <circle cx=\"${xF2}\" cy=\"${yF2}\" r=\"3\" fill=\"brown\"/> <text x=\"${\n          xF2 + 20\n        }\" y=\"${yF2 + 5}\" fill=\"brown\">F2</text>\n      <circle cx=\"${xF3}\" cy=\"${yF3}\" r=\"3\" fill=\"brown\"/> <text x=\"${\n          xF3 - 10\n        }\" y=\"${yF3 + 5}\" fill=\"brown\">F3</text>\n      <circle cx=\"${xJ}\" cy=\"${yJ}\" r=\"3\" fill=\"green\"/> <text x=\"${\n          xJ - 5\n        }\" y=\"${yJ - 10}\" fill=\"green\">J</text>\n      <circle cx=\"${xK}\" cy=\"${yK}\" r=\"3\" fill=\"orange\"/> <text x=\"${\n          xK - 5\n        }\" y=\"${yK - 10}\" fill=\"orange\">K</text>\n      <circle cx=\"${xL2}\" cy=\"${yL2}\" r=\"3\" fill=\"purple\"/> <text x=\"${\n          xL2 + 20\n        }\" y=\"${yL2 + 5}\" fill=\"purple\">L2</text>\n      <circle cx=\"${xL3}\" cy=\"${yL3}\" r=\"3\" fill=\"orange\"/> <text x=\"${\n          xL3 - 5\n        }\" y=\"${yL3 - 10}\" fill=\"orange\">L3</text>\n      <circle cx=\"${xN}\" cy=\"${yN}\" r=\"3\" fill=\"purple\"/> <text x=\"${\n          xN + 5\n        }\" y=\"${yN - 10}\" fill=\"purple\">N</text>\n      <circle cx=\"${xP}\" cy=\"${yP}\" r=\"3\" fill=\"purple\"/> <text x=\"${\n          xP + 10\n        }\" y=\"${yP + 5}\" fill=\"purple\">P</text>\n      <circle cx=\"${xQ}\" cy=\"${yQ}\" r=\"3\" fill=\"purple\"/> <text x=\"${\n          xQ + 10\n        }\" y=\"${yQ - 10}\" fill=\"purple\">Q</text>\n      <circle cx=\"${xQ1}\" cy=\"${yQ1}\" r=\"3\" fill=\"red\"/> <text x=\"${\n          xQ1 - 10\n        }\" y=\"${yQ1 - 10}\" fill=\"red\">Q1</text>\n\n      <!-- Guides d'assemblage - Lignes verticales -->\n      ${\n        col < pagesHorizontal - 1\n          ? `<line x1=\"${pageMaxX}\" y1=\"${pageMinY}\" x2=\"${pageMaxX}\" y2=\"${pageMaxY}\" \n            stroke=\"black\" stroke-width=\"1\" stroke-dasharray=\"5,5\"/>`\n          : \"\"\n      }\n      \n      <!-- Guides d'assemblage - Lignes horizontales -->\n      ${\n        row < pagesVertical - 1\n          ? `<line x1=\"${pageMinX}\" y1=\"${pageMaxY}\" x2=\"${pageMaxX}\" y2=\"${pageMaxY}\" \n            stroke=\"black\" stroke-width=\"1\" stroke-dasharray=\"5,5\"/>`\n          : \"\"\n      }\n    </svg>\n    `;\n\n        // Créer le HTML pour cette page\n        let pageHtml = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <title>Patron T-Shirt - Page ${row * pagesHorizontal + col + 1}</title>\n      <style>\n        body { margin: 0; padding: 0; }\n        .page-info { \n          position: absolute; \n          top: 5px; \n          left: 5px; \n          font-family: Arial; \n          font-size: 10pt; \n          color: #999;\n          z-index: 100;\n        }\n        svg {\n          margin: 0;\n          padding: 0;\n          width: 100%;\n          height: 100vh;\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"page-info\">\n        Patron T-Shirt - Page ${row * pagesHorizontal + col + 1} de ${\n          pagesHorizontal * pagesVertical\n        }\n      </div>\n      ${pageSvg}\n    </body>\n    </html>\n    `;\n\n        pagesHtml.push(pageHtml);\n      }\n    }\n\n    // Générer le PDF avec toutes les pages\n    let htmlContent = pagesHtml[0]; // La première page seulement pour le test\n\n    // Générer un PDF pour chaque page HTML\n    let pdfFiles = [];\n    for (let i = 0; i < pagesHtml.length; i++) {\n      const file = await printToFileAsync({\n        html: pagesHtml[i],\n        base64: false,\n        margins: {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n        },\n      });\n      pdfFiles.push(file.uri);\n    }\n\n    // Utiliser PDFLib pour fusionner tous les PDFs en un seul\n    if (pdfFiles.length > 1) {\n      const mergedPdf = await PDFDocument.create();\n\n      for (let i = 0; i < pdfFiles.length; i++) {\n        const pdfData = await FileSystem.readAsStringAsync(pdfFiles[i], {\n          encoding: FileSystem.EncodingType.Base64,\n        });\n        const pdfDoc = await PDFDocument.load(pdfData);\n        const pages = await mergedPdf.copyPages(\n          pdfDoc,\n          pdfDoc.getPageIndices()\n        );\n\n        for (const page of pages) {\n          mergedPdf.addPage(page);\n        }\n      }\n\n      const mergedPdfBytes = await mergedPdf.save();\n\n      // Convertir le PDF fusionné en Base64\n      const base64String = encode(mergedPdfBytes);\n\n      // Créer un fichier temporaire pour le PDF fusionné\n      const mergedPdfPath = FileSystem.documentDirectory + \"patron_tshirt.pdf\";\n      await FileSystem.writeAsStringAsync(mergedPdfPath, base64String, {\n        encoding: FileSystem.EncodingType.Base64,\n      });\n\n      // Partager le PDF fusionné\n      await shareAsync(mergedPdfPath);\n\n      // Nettoyer les fichiers temporaires\n      for (let file of pdfFiles) {\n        try {\n          await FileSystem.deleteAsync(file);\n        } catch (error) {\n          console.log(\n            \"Erreur lors de la suppression d'un fichier temporaire:\",\n            error\n          );\n        }\n      }\n    } else {\n      // S'il n'y a qu'une seule page, partager directement\n      await shareAsync(pdfFiles[0]);\n    }\n  };\n  const hundleCarre = async () => {\n    const largeur = 5;\n    console.log(\"largeur2\", largeur);\n    let htmlContent = `\n      <!DOCTYPE html>\n      <html>\n      <head >\n        <meta charset=\"utf-8\">\n        <title>Rectangle PDF</title>\n      </head>\n      <body>\n        <svg \n             width=\"21cm\" \n             height=\"29.7cm\" \n             xmlns=\"http://www.w3.org/2000/svg\">\n          <rect x=\"20\" y=\"20\" \n                width=\"${largeur}cm\" \n                height=\"${largeur}cm\" \n                stroke=\"black\" \n                stroke-width=\"1\" \n                fill=\"none\"/>\n        </svg>\n      </body>\n      </html>\n    `;\n    console.log(\"hundleCarre called 2\");\n    const file = await printToFileAsync({\n      html: htmlContent,\n      base64: false,\n      margins: {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n      },\n    });\n    await shareAsync(file.uri);\n  };\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\n      <View style={styles.container}>\n        <Text style={styles.title}>Patron T-Shirt</Text>\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Taille (hauteur totale en cm)\"\n          keyboardType=\"numeric\"\n          value={taille ? taille.toString() : \"\"}\n          onChangeText={(text) => setTaille(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de poitrine (cm)\"\n          keyboardType=\"numeric\"\n          value={poitrine ? poitrine.toString() : \"\"}\n          onChangeText={(text) => setPoitrine(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Hauteur dos (base du cou à la taille en cm)\"\n          keyboardType=\"numeric\"\n          value={longueurDos ? longueurDos.toString() : \"\"}\n          onChangeText={(text) => setLongueurDos(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de buste (cm)\"\n          keyboardType=\"numeric\"\n          value={buste ? buste.toString() : \"\"}\n          onChangeText={(text) => setBuste(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Distance entre les épaules (cm)\"\n          keyboardType=\"numeric\"\n          value={distanceEpaules ? distanceEpaules.toString() : \"\"}\n          onChangeText={(text) => setDistanceEpaules(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Carrure - largeur du dos (cm)\"\n          keyboardType=\"numeric\"\n          value={carrure ? carrure.toString() : \"\"}\n          onChangeText={(text) => setCarrure(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de taille (cm)\"\n          keyboardType=\"numeric\"\n          value={tourTaille ? tourTaille.toString() : \"\"}\n          onChangeText={(text) => setTourTaille(Number(text))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Longueur cou taille (cm)\"\n          keyboardType=\"numeric\"\n          value={longueurDevant ? longueurDevant.toString() : \"\"}\n          onChangeText={(text) => setLongueurDevant(Number(text))}\n        />\n        <Button title=\"Télécharger en PDF\" onPress={saveAsPDF} />\n        <Button\n          title=\"Télécharger Avec Mensurations\"\n          onPress={setMensurations}\n        />\n        <Button\n          title=\"Tracé carré\"\n          onPress={() => {\n            hundleCarre();\n          }}\n        />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  input: {\n    width: 300,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n});\n\nexport default TShirtTest;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,wBAAA;AAAA,OAAAC,UAAA;AAWxC,OAAOC,GAAG,IAAIC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,MAAM,QAAQ,kBAAkB;AAChE,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAO,KAAKC,KAAK,MAAM,YAAY;AACnC,SAASC,WAAW,EAAEC,GAAG,EAAEC,aAAa,QAAQ,SAAS;AACzD,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,OAAO,KAAKC,OAAO,MAAM,cAAc;AACvC,SAASC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACkC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACsC,UAAU,EAAEC,aAAa,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACwC,cAAc,EAAEC,iBAAiB,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAM0C,eAAe,GAAGA,CAAA,KAAM;IAC5Bf,SAAS,CAAC,GAAG,CAAC;IACdE,WAAW,CAAC,EAAE,CAAC;IACfE,cAAc,CAAC,EAAE,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;IACZE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,UAAU,CAAC,EAAE,CAAC;IACdE,aAAa,CAAC,EAAE,CAAC;IACjBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,SAAS,CAAC,CAAC;EACb,CAAC;EAED,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAE5B,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,QAAQ,GAAG,IAAI;IACrB,MAAMC,QAAQ,GAAG,EAAE,GAAG,IAAI;IAC1B,MAAMC,UAAU,GAAGH,OAAO,GAAGE,QAAQ;IACrC,MAAME,WAAW,GAAGH,QAAQ,GAAGC,QAAQ;IAGvC,MAAMG,SAAS,GAAG,EAAE;IACpB,MAAMC,iBAAiB,GAAGH,UAAU,GAAG,CAAC,GAAGE,SAAS;IACpD,MAAME,kBAAkB,GAAGH,WAAW,GAAG,CAAC,GAAGC,SAAS;IAKtD,IAAIG,EAAE,GAAG,EAAE;IACX,IAAIC,EAAE,GAAG,EAAE;IAGX,IAAIC,EAAE,GAAGF,EAAE,GAAG,CAACpB,KAAK,GAAG,CAAC,GAAG,CAAC,IAAIc,QAAQ;IACxC,IAAIS,EAAE,GAAGF,EAAE;IAGX,IAAIG,EAAE,GAAGJ,EAAE;IACX,IAAIK,EAAE,GAAGJ,EAAE,GAAGvB,WAAW,GAAGgB,QAAQ;IAGpC,IAAIY,EAAE,GAAGN,EAAE;IACX,IAAIO,EAAE,GAAGN,EAAE,GAAG,CAACzB,QAAQ,GAAG,EAAE,GAAG,GAAG,IAAIkB,QAAQ;IAG9C,IAAIc,GAAG,GAAGF,EAAE;IACZ,IAAIG,GAAG,GAAGF,EAAE,GAAG,GAAG,GAAGb,QAAQ;IAG7B,IAAIgB,iBAAiB,GAAG,CAACpC,MAAM,GAAG,CAAC,GAAGE,QAAQ,GAAG,EAAE,GAAG,GAAG,IAAIkB,QAAQ;IACrE,IAAIiB,EAAE,GAAGX,EAAE;IACX,IAAIY,EAAE,GAAGX,EAAE,GAAGS,iBAAiB;IAG/B,IAAIG,EAAE,GAAGb,EAAE,GAAIxB,QAAQ,GAAG,EAAE,GAAIkB,QAAQ;IACxC,IAAIoB,EAAE,GAAGb,EAAE;IAGX,IAAIc,EAAE,GAAGf,EAAE,GAAIhB,OAAO,GAAG,CAAC,GAAIU,QAAQ;IACtC,IAAIsB,EAAE,GAAGf,EAAE;IAGX,IAAIgB,GAAG,GAAGN,EAAE,GAAG,CAAC/B,KAAK,GAAG,CAAC,GAAG,CAAC,IAAIc,QAAQ;IACzC,IAAIwB,GAAG,GAAGN,EAAE;IAGZ,IAAIO,GAAG,GAAGf,EAAE,GAAG,CAAClB,UAAU,GAAG,CAAC,GAAG,CAAC,IAAIQ,QAAQ;IAC9C,IAAI0B,GAAG,GAAGf,EAAE;IAGZ,IAAIgB,EAAE,GAAGN,EAAE;IACX,IAAIO,EAAE,GAAGV,EAAE;IAGX,IAAIW,EAAE,GAAGR,EAAE;IACX,IAAIS,EAAE,GAAGf,GAAG;IAGZ,IAAIgB,GAAG,GAAGjB,GAAG,GAAI1B,eAAe,GAAG,CAAC,GAAIY,QAAQ;IAChD,IAAIgC,GAAG,GAAGjB,GAAG;IAGb,IAAIkB,EAAE,GAAGN,EAAE,GAAG,GAAG,GAAG3B,QAAQ;IAC5B,IAAIkC,EAAE,GAAGN,EAAE,GAAG,CAAC,GAAG5B,QAAQ;IAG1B,IAAImC,SAAS,GAAG,CAACJ,GAAG,GAAGE,EAAE,IAAI,CAAC,GAAG,CAAC;IAClC,IAAIG,SAAS,GAAGJ,GAAG,GAAG,GAAG;IAEzB,IAAIK,SAAS,GAAGJ,EAAE,GAAG,GAAG;IACxB,IAAIK,SAAS,GAAGJ,EAAE,GAAG,EAAE;IAIvB,IAAIK,GAAG,GAAG/B,EAAE;IACZ,IAAIgC,GAAG,GAAGtB,EAAE;IAGZ,IAAIuB,EAAE,GAAGjC,EAAE;IACX,IAAIkC,EAAE,GAAG/B,EAAE;IAGX,IAAIgC,GAAG,GAAGF,EAAE;IACZ,IAAIG,GAAG,GAAGnC,EAAE;IAGZ,IAAIoC,EAAE,GAAGF,GAAG,GAAG,CAAC7D,QAAQ,GAAG,EAAE,GAAG,CAAC,IAAIkB,QAAQ;IAC7C,IAAI8C,EAAE,GAAGF,GAAG;IAGZ,IAAIG,EAAE,GAAGJ,GAAG,GAAI7D,QAAQ,GAAG,EAAE,GAAIkB,QAAQ;IACzC,IAAIgD,EAAE,GAAGJ,GAAG;IAGZ,IAAIK,EAAE,GAAGN,GAAG,GAAG,CAACrD,OAAO,GAAG,CAAC,GAAG,CAAC,IAAIU,QAAQ;IAC3C,IAAIkD,EAAE,GAAGN,GAAG;IAGZ,IAAIO,GAAG,GAAGZ,GAAG,GAAG,CAACrD,KAAK,GAAG,CAAC,GAAG,CAAC,IAAIc,QAAQ;IAC1C,IAAIoD,GAAG,GAAGZ,GAAG;IAGb,IAAIa,GAAG,GAAGJ,EAAE;IACZ,IAAIK,GAAG,GAAGJ,EAAE,GAAG,GAAG,GAAGlD,QAAQ;IAG7B,IAAIuD,GAAG,GAAGd,EAAE,GAAG,CAACjD,UAAU,GAAG,CAAC,GAAG,CAAC,IAAIQ,QAAQ;IAC9C,IAAIwD,GAAG,GAAGd,EAAE;IAGZ,IAAIe,EAAE,GAAGR,EAAE;IACX,IAAIS,EAAE,GAAGlB,GAAG;IAGZ,IAAImB,EAAE,GAAGF,EAAE;IACX,IAAIG,EAAE,GAAGF,EAAE,GAAG,CAAC,GAAG1D,QAAQ;IAG1B,IAAI6D,GAAG,GAAGF,EAAE,GAAG,GAAG,GAAG3D,QAAQ;IAC7B,IAAI8D,GAAG,GAAGF,EAAE;IAGZ,IAAIG,WAAW,GAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC/C,EAAE,GAAGY,GAAG,EAAE,CAAC,CAAC,GAAGiC,IAAI,CAACE,GAAG,CAAC9C,EAAE,GAAGY,GAAG,EAAE,CAAC,CAAC,CAAC;IAC1E,IAAImC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAACpC,GAAG,GAAGZ,EAAE,EAAEW,GAAG,GAAGZ,EAAE,CAAC;IAE1C,IAAIkD,GAAG,GAAGtB,EAAE,GAAGgB,WAAW,GAAGC,IAAI,CAACM,GAAG,CAAC,CAACH,KAAK,CAAC;IAC7C,IAAII,GAAG,GAAGvB,EAAE,GAAGe,WAAW,GAAGC,IAAI,CAACQ,GAAG,CAAC,CAACL,KAAK,CAAC;IAG7C,IAAIM,gBAAgB,GAAG,CAAC1B,EAAE,GAAGF,EAAE,IAAI,CAAC;IACpC,IAAI6B,gBAAgB,GAAG1B,EAAE,GAAG,CAAC,GAAGhD,QAAQ;IAGxC,IAAI2E,cAAc,GAAG,CAACN,GAAG,GAAGR,GAAG,IAAI,CAAC,GAAG,CAAC;IACxC,IAAIe,cAAc,GAAGL,GAAG,GAAG,GAAG;IAE9B,IAAIM,cAAc,GAAGhB,GAAG,GAAG,GAAG;IAC9B,IAAIiB,cAAc,GAAGhB,GAAG,GAAG,EAAE;IAG7B,IAAIiB,IAAI,GAAGf,IAAI,CAACgB,GAAG,CAAC1E,EAAE,EAAEI,EAAE,EAAEO,EAAE,EAAEkC,GAAG,EAAEI,GAAG,CAAC;IACzC,IAAI0B,IAAI,GAAGjB,IAAI,CAACkB,GAAG,CAAC1E,EAAE,EAAEmC,GAAG,EAAEF,EAAE,EAAElB,GAAG,EAAEE,GAAG,CAAC;IAC1C,IAAI0D,IAAI,GAAGnB,IAAI,CAACgB,GAAG,CAACzE,EAAE,EAAEE,EAAE,EAAEW,EAAE,EAAE4B,EAAE,CAAC;IACnC,IAAIoC,IAAI,GAAGpB,IAAI,CAACkB,GAAG,CAACvE,EAAE,EAAE+B,EAAE,EAAEhB,GAAG,EAAE8B,GAAG,CAAC;IAGrCuB,IAAI,IAAI5E,SAAS;IACjBgF,IAAI,IAAIhF,SAAS;IACjB8E,IAAI,IAAI9E,SAAS;IACjBiF,IAAI,IAAIjF,SAAS;IAEjB,IAAIkF,UAAU,GAAGJ,IAAI,GAAGF,IAAI;IAC5B,IAAIO,WAAW,GAAGF,IAAI,GAAGD,IAAI;IAG7B,IAAII,eAAe,GAAGvB,IAAI,CAACwB,IAAI,CAACH,UAAU,GAAGjF,iBAAiB,CAAC;IAC/D,IAAIqF,aAAa,GAAGzB,IAAI,CAACwB,IAAI,CAACF,WAAW,GAAGjF,kBAAkB,CAAC;IAE/DqF,OAAO,CAACC,GAAG,CAAC,uBAAuBN,UAAU,IAAIC,WAAW,MAAM,CAAC;IACnEI,OAAO,CAACC,GAAG,CAAC,iBAAiBJ,eAAe,IAAIE,aAAa,WAAW,CAAC;IAGzE,IAAIG,SAAS,GAAG,EAAE;IAGlB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGJ,aAAa,EAAEI,GAAG,EAAE,EAAE;MAC5C,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGP,eAAe,EAAEO,GAAG,EAAE,EAAE;QAE9C,IAAIC,QAAQ,GAAGhB,IAAI,GAAGe,GAAG,GAAG1F,iBAAiB;QAC7C,IAAI4F,QAAQ,GAAGb,IAAI,GAAGU,GAAG,GAAGxF,kBAAkB;QAC9C,IAAI4F,QAAQ,GAAGjC,IAAI,CAACgB,GAAG,CAACe,QAAQ,GAAG3F,iBAAiB,EAAE6E,IAAI,CAAC;QAC3D,IAAIiB,QAAQ,GAAGlC,IAAI,CAACgB,GAAG,CAACgB,QAAQ,GAAG3F,kBAAkB,EAAE+E,IAAI,CAAC;QAC5D,IAAIe,SAAS,GAAGF,QAAQ,GAAGF,QAAQ;QACnC,IAAIK,UAAU,GAAGF,QAAQ,GAAGF,QAAQ;QAGpC,IAAIK,OAAO,GAAG;AACtB;AACA,iBAAiBpG,UAAU;AAC3B,kBAAkBC,WAAW;AAC7B,mBAAmB6F,QAAQ,IAAIC,QAAQ,IAAIG,SAAS,IAAIC,UAAU;AAClE;AACA,iBAAiBL,QAAQ,GAAG,EAAE,QACpBC,QAAQ,GAAG,EAAE;AACvB,eACeH,GAAG,GAAGN,eAAe,GAAGO,GAAG,GAAG,CAAC,OACpCP,eAAe,GAAGE,aAAa,KAC5BK,GAAG,GAAG,CAAC,IAAID,GAAG,GAAG,CAAC;AAC/B;AACA;AACA;AACA;AACA,kBAAkBvF,EAAE,SAASC,EAAE,SAASC,EAAE,SAASC,EAAE;AACrD;AACA;AACA,kBAAkBH,EAAE,SAASC,EAAE,SAASG,EAAE,SAASC,EAAE;AACrD;AACA;AACA,kBAAkBQ,EAAE,IAAIC,EAAE,KAChB,CAACD,EAAE,GAAGP,EAAE,IAAI,CAAC,IACXC,EAAE,KAAKD,EAAE,IAAIC,EAAE;AAC3B;AACA;AACA,kBAAkBP,EAAE,SAASC,EAAE,SAASK,EAAE,SAASC,EAAE;AACrD;AACA;AACA,kBAAkBD,EAAE,SAASC,EAAE,SAASC,GAAG,SAASC,GAAG;AACvD;AACA;AACA,kBAAkBI,EAAE,SAASC,EAAE,SAASW,GAAG,SAASC,GAAG;AACvD;AACA;AACA,kBAAkB1B,EAAE,SAASC,EAAE,SAASU,EAAE,SAASC,EAAE;AACrD;AACA;AACA,kBAAkBD,EAAE,SAASC,EAAE,SAASK,GAAG,SAASC,GAAG;AACvD;AACA;AACA,kBAAkBd,EAAE,SAASC,EAAE,SAASc,GAAG,SAASC,GAAG;AACvD;AACA;AACA,kBAAkBH,GAAG,SAASC,GAAG,SAASC,GAAG,SAASC,GAAG;AACzD;AACA;AACA,kBAAkBL,EAAE,SAASC,EAAE,SAASO,EAAE,SAASC,EAAE;AACrD;AACA;AACA,kBAAkBT,EAAE,SAASC,EAAE,SAASK,EAAE,SAASC,EAAE;AACrD;AACA;AACA,oBAAoBK,EAAE,SAASC,EAAE;AACjC;AACA;AACA,kBAAkBH,GAAG,IAAIC,GAAG,KAAKG,SAAS,IAAIC,SAAS,KAAKC,SAAS,IAAIC,SAAS,KAAKf,GAAG,IAAIC,GAAG;AACjG;AACA;AACA,oBAAoBlB,EAAE,SAASC,EAAE,kCACvBD,EAAE,GAAG,EAAE,QACDC,EAAE,GAAG,EAAE;AACvB,oBAAoBC,EAAE,SAASC,EAAE,kCACvBD,EAAE,GAAG,EAAE,QACDC,EAAE,GAAG,EAAE;AACvB,oBAAoBC,EAAE,SAASC,EAAE,iCACvBD,EAAE,GAAG,EAAE,QACDC,EAAE,GAAG,EAAE;AACvB,oBAAoBc,GAAG,SAASC,GAAG,kCACzBD,GAAG,GAAG,EAAE,QACFC,GAAG,GAAG,EAAE;AACxB,oBAAoBd,EAAE,SAASC,EAAE,mCACvBD,EAAE,GAAG,EAAE,QACDC,EAAE,GAAG,CAAC;AACtB,oBAAoBC,GAAG,SAASC,GAAG,mCACzBD,GAAG,GAAG,EAAE,QACFC,GAAG,GAAG,CAAC;AACvB,oBAAoBE,EAAE,SAASC,EAAE,mCACvBD,EAAE,GAAG,EAAE,QACDC,EAAE,GAAG,CAAC;AACtB,oBAAoBK,GAAG,SAASC,GAAG,mCACzBD,GAAG,GAAG,EAAE,QACFC,GAAG,GAAG,CAAC;AACvB,oBAAoBL,EAAE,SAASC,EAAE,oCAAoCD,EAAE,QAC7DC,EAAE,GAAG,EAAE;AACjB,oBACoBC,EAAE,SAASC,EAAE,oCACvBD,EAAE,GAAG,CAAC,QACAC,EAAE,GAAG,EAAE;AACvB,oBAAoBK,EAAE,SAASC,EAAE,oCACvBD,EAAE,GAAG,EAAE,QACDC,EAAE,GAAG,EAAE;AACvB,oBAAoBC,EAAE,SAASC,EAAE,oCACvBD,EAAE,GAAG,EAAE,QACDC,EAAE,GAAG,CAAC;AACtB,oBAAoBC,GAAG,SAASC,GAAG,oCAAoCD,GAAG,QAChEC,GAAG,GAAG,EAAE;AAClB,oBACoBC,EAAE,SAASC,EAAE,iCACvBD,EAAE,GAAG,EAAE,QACDC,EAAE,GAAG,CAAC;AACtB;AACA;AACA;AACA,kBAAkB1B,EAAE,SAASC,EAAE,SAASgC,EAAE,SAASC,EAAE;AACrD;AACA;AACA,kBAAkBD,EAAE,SAASC,EAAE,SAASC,GAAG,SAASC,GAAG;AACvD;AACA;AACA,kBAAkBG,EAAE,IAAIC,EAAE,KAAKyB,gBAAgB,IAAIC,gBAAgB,KAAK7B,EAAE,IAAIC,EAAE;AAChF;AACA;AACA,kBAAkBH,GAAG,SAASC,GAAG,SAASC,EAAE,SAASC,EAAE;AACvD;AACA;AACA,kBAAkBH,GAAG,SAASC,GAAG,SAASG,EAAE,SAASC,EAAE;AACvD;AACA;AACA,kBAAkBL,GAAG,SAASC,GAAG,SAASK,EAAE,SAASC,EAAE;AACvD;AACA;AACA,kBAAkBD,EAAE,SAASC,EAAE,SAASG,GAAG,SAASC,GAAG;AACvD;AACA;AACA,kBAAkBP,EAAE,SAASC,EAAE,SAASqB,GAAG,SAASE,GAAG;AACvD;AACA;AACA,kBAAkB/D,EAAE,SAASC,EAAE,SAAS8B,GAAG,SAASC,GAAG;AACvD;AACA;AACA,kBAAkBD,GAAG,SAASC,GAAG,SAASW,GAAG,SAASC,GAAG;AACzD;AACA;AACA,kBAAkBX,EAAE,SAASC,EAAE,SAASa,GAAG,SAASC,GAAG;AACvD;AACA;AACA,kBAAkBL,GAAG,SAASC,GAAG,SAASG,GAAG,SAASC,GAAG;AACzD;AACA;AACA,kBAAkBP,EAAE,SAASC,EAAE,SAASO,EAAE,SAASC,EAAE;AACrD;AACA;AACA,kBAAkBD,EAAE,SAASC,EAAE,SAASC,EAAE,SAASC,EAAE;AACrD;AACA;AACA,kBAAkBD,EAAE,SAASC,EAAE,SAASC,GAAG,SAASC,GAAG;AACvD;AACA;AACA,kBAAkBO,GAAG,IAAIE,GAAG,KAAKI,cAAc,IAAIC,cAAc,KAAKC,cAAc,IAAIC,cAAc,KAAK3B,GAAG,IAAIC,GAAG;AACrH;AACA;AACA,oBAAoBT,GAAG,SAASC,GAAG,kCACzBD,GAAG,GAAG,EAAE,QACFC,GAAG,GAAG,EAAE;AACxB,oBAAoBH,EAAE,SAASC,EAAE,iCACvBD,EAAE,GAAG,EAAE,QACDC,EAAE,GAAG,EAAE;AACvB,oBAAoBa,GAAG,SAASC,GAAG,kCACzBD,GAAG,GAAG,EAAE,QACFC,GAAG,GAAG,EAAE;AACxB,oBAAoBjB,GAAG,SAASC,GAAG,mCACzBD,GAAG,GAAG,EAAE,QACFC,GAAG,GAAG,CAAC;AACvB,oBAAoBW,GAAG,SAASC,GAAG,mCACzBD,GAAG,GAAG,EAAE,QACFC,GAAG,GAAG,CAAC;AACvB,oBAAoBP,EAAE,SAASC,EAAE,mCACvBD,EAAE,GAAG,CAAC,QACAC,EAAE,GAAG,EAAE;AACvB,oBAAoBC,EAAE,SAASC,EAAE,oCACvBD,EAAE,GAAG,CAAC,QACAC,EAAE,GAAG,EAAE;AACvB,oBAAoBK,GAAG,SAASC,GAAG,oCACzBD,GAAG,GAAG,EAAE,QACFC,GAAG,GAAG,CAAC;AACvB,oBAAoBe,GAAG,SAASE,GAAG,oCACzBF,GAAG,GAAG,CAAC,QACDE,GAAG,GAAG,EAAE;AACxB,oBAAoBtB,EAAE,SAASC,EAAE,oCACvBD,EAAE,GAAG,CAAC,QACAC,EAAE,GAAG,EAAE;AACvB,oBAAoBO,EAAE,SAASC,EAAE,oCACvBD,EAAE,GAAG,EAAE,QACDC,EAAE,GAAG,CAAC;AACtB,oBAAoBC,EAAE,SAASC,EAAE,oCACvBD,EAAE,GAAG,EAAE,QACDC,EAAE,GAAG,EAAE;AACvB,oBAAoBC,GAAG,SAASC,GAAG,iCACzBD,GAAG,GAAG,EAAE,QACFC,GAAG,GAAG,EAAE;AACxB;AACA;AACA,QACQgC,GAAG,GAAGP,eAAe,GAAG,CAAC,GACrB,aAAaU,QAAQ,SAASD,QAAQ,SAASC,QAAQ,SAASC,QAAQ;AACpF,qEAAqE,GACzD,EAAE;AACd;AACA;AACA,QAEQL,GAAG,GAAGJ,aAAa,GAAG,CAAC,GACnB,aAAaM,QAAQ,SAASG,QAAQ,SAASD,QAAQ,SAASC,QAAQ;AACpF,qEAAqE,GACzD,EAAE;AACd;AACA,KACK;QAGG,IAAII,QAAQ,GAAG;AACvB;AACA;AACA;AACA;AACA,qCAAqCT,GAAG,GAAGN,eAAe,GAAGO,GAAG,GAAG,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgCD,GAAG,GAAGN,eAAe,GAAGO,GAAG,GAAG,CAAC,OACrDP,eAAe,GAAGE,aAAa;AACzC;AACA,QACQY,OAAO;AACf;AACA;AACA,KAAK;QAEGT,SAAS,CAACW,IAAI,CAACD,QAAQ,CAAC;MAC1B;IACF;IAGA,IAAIE,WAAW,GAAGZ,SAAS,CAAC,CAAC,CAAC;IAG9B,IAAIa,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,SAAS,CAACe,MAAM,EAAED,CAAC,EAAE,EAAE;MACzC,MAAME,IAAI,GAAG,MAAM5I,gBAAgB,CAAC;QAClC6I,IAAI,EAAEjB,SAAS,CAACc,CAAC,CAAC;QAClBI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACPC,IAAI,EAAE,CAAC;UACPC,GAAG,EAAE,CAAC;UACNC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE;QACV;MACF,CAAC,CAAC;MACFV,QAAQ,CAACF,IAAI,CAACK,IAAI,CAACQ,GAAG,CAAC;IACzB;IAGA,IAAIX,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;MACvB,MAAMU,SAAS,GAAG,MAAMlJ,WAAW,CAACmJ,MAAM,CAAC,CAAC;MAE5C,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QACxC,MAAMa,OAAO,GAAG,MAAMjJ,UAAU,CAACkJ,iBAAiB,CAACf,QAAQ,CAACC,CAAC,CAAC,EAAE;UAC9De,QAAQ,EAAEnJ,UAAU,CAACoJ,YAAY,CAACC;QACpC,CAAC,CAAC;QACF,MAAMC,MAAM,GAAG,MAAMzJ,WAAW,CAAC0J,IAAI,CAACN,OAAO,CAAC;QAC9C,MAAMO,KAAK,GAAG,MAAMT,SAAS,CAACU,SAAS,CACrCH,MAAM,EACNA,MAAM,CAACI,cAAc,CAAC,CACxB,CAAC;QAED,KAAK,MAAMC,IAAI,IAAIH,KAAK,EAAE;UACxBT,SAAS,CAACa,OAAO,CAACD,IAAI,CAAC;QACzB;MACF;MAEA,MAAME,cAAc,GAAG,MAAMd,SAAS,CAACe,IAAI,CAAC,CAAC;MAG7C,MAAMC,YAAY,GAAG7J,MAAM,CAAC2J,cAAc,CAAC;MAG3C,MAAMG,aAAa,GAAGhK,UAAU,CAACiK,iBAAiB,GAAG,mBAAmB;MACxE,MAAMjK,UAAU,CAACkK,kBAAkB,CAACF,aAAa,EAAED,YAAY,EAAE;QAC/DZ,QAAQ,EAAEnJ,UAAU,CAACoJ,YAAY,CAACC;MACpC,CAAC,CAAC;MAGF,MAAM1J,UAAU,CAACqK,aAAa,CAAC;MAG/B,KAAK,IAAI1B,IAAI,IAAIH,QAAQ,EAAE;QACzB,IAAI;UACF,MAAMnI,UAAU,CAACmK,WAAW,CAAC7B,IAAI,CAAC;QACpC,CAAC,CAAC,OAAO8B,KAAK,EAAE;UACdhD,OAAO,CAACC,GAAG,CACT,wDAAwD,EACxD+C,KACF,CAAC;QACH;MACF;IACF,CAAC,MAAM;MAEL,MAAMzK,UAAU,CAACwI,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC/B;EACF,CAAC;EACD,MAAMkC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,OAAO,GAAG,CAAC;IACjBlD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEiD,OAAO,CAAC;IAChC,IAAIpC,WAAW,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyBoC,OAAO;AAChC,0BAA0BA,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDlD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,MAAMiB,IAAI,GAAG,MAAM5I,gBAAgB,CAAC;MAClC6I,IAAI,EAAEL,WAAW;MACjBM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,IAAI,EAAE,CAAC;QACPC,GAAG,EAAE,CAAC;QACNC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE;MACV;IACF,CAAC,CAAC;IACF,MAAMlJ,UAAU,CAAC2I,IAAI,CAACQ,GAAG,CAAC;EAC5B,CAAC;EACD,OACE1I,OAAA,CAACjB,wBAAwB;IAACoL,OAAO,EAAErL,QAAQ,CAACsL,OAAQ;IAACC,UAAU,EAAE,KAAM;IAAAC,QAAA,EACrEtK,OAAA,CAACvB,IAAI;MAAC8L,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,GAC5BtK,OAAA,CAACpB,IAAI;QAAC2L,KAAK,EAAEC,MAAM,CAACE,KAAM;QAAAJ,QAAA,EAAC;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAEhD9K,OAAA,CAACtB,SAAS;QACR6L,KAAK,EAAEC,MAAM,CAACO,KAAM;QACpBC,WAAW,EAAC,+BAA+B;QAC3CC,YAAY,EAAC,SAAS;QACtBC,KAAK,EAAEhL,MAAM,GAAGA,MAAM,CAACiL,QAAQ,CAAC,CAAC,GAAG,EAAG;QACvCC,YAAY,EAAGC,IAAI,IAAKlL,SAAS,CAACmL,MAAM,CAACD,IAAI,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,EAEF9K,OAAA,CAACtB,SAAS;QACR6L,KAAK,EAAEC,MAAM,CAACO,KAAM;QACpBC,WAAW,EAAC,uBAAuB;QACnCC,YAAY,EAAC,SAAS;QACtBC,KAAK,EAAE9K,QAAQ,GAAGA,QAAQ,CAAC+K,QAAQ,CAAC,CAAC,GAAG,EAAG;QAC3CC,YAAY,EAAGC,IAAI,IAAKhL,WAAW,CAACiL,MAAM,CAACD,IAAI,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,EAEF9K,OAAA,CAACtB,SAAS;QACR6L,KAAK,EAAEC,MAAM,CAACO,KAAM;QACpBC,WAAW,EAAC,gDAA6C;QACzDC,YAAY,EAAC,SAAS;QACtBC,KAAK,EAAE5K,WAAW,GAAGA,WAAW,CAAC6K,QAAQ,CAAC,CAAC,GAAG,EAAG;QACjDC,YAAY,EAAGC,IAAI,IAAK9K,cAAc,CAAC+K,MAAM,CAACD,IAAI,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,EAEF9K,OAAA,CAACtB,SAAS;QACR6L,KAAK,EAAEC,MAAM,CAACO,KAAM;QACpBC,WAAW,EAAC,oBAAoB;QAChCC,YAAY,EAAC,SAAS;QACtBC,KAAK,EAAE1K,KAAK,GAAGA,KAAK,CAAC2K,QAAQ,CAAC,CAAC,GAAG,EAAG;QACrCC,YAAY,EAAGC,IAAI,IAAK5K,QAAQ,CAAC6K,MAAM,CAACD,IAAI,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,EAEF9K,OAAA,CAACtB,SAAS;QACR6L,KAAK,EAAEC,MAAM,CAACO,KAAM;QACpBC,WAAW,EAAC,oCAAiC;QAC7CC,YAAY,EAAC,SAAS;QACtBC,KAAK,EAAExK,eAAe,GAAGA,eAAe,CAACyK,QAAQ,CAAC,CAAC,GAAG,EAAG;QACzDC,YAAY,EAAGC,IAAI,IAAK1K,kBAAkB,CAAC2K,MAAM,CAACD,IAAI,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,EAEF9K,OAAA,CAACtB,SAAS;QACR6L,KAAK,EAAEC,MAAM,CAACO,KAAM;QACpBC,WAAW,EAAC,+BAA+B;QAC3CC,YAAY,EAAC,SAAS;QACtBC,KAAK,EAAEtK,OAAO,GAAGA,OAAO,CAACuK,QAAQ,CAAC,CAAC,GAAG,EAAG;QACzCC,YAAY,EAAGC,IAAI,IAAKxK,UAAU,CAACyK,MAAM,CAACD,IAAI,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,EAEF9K,OAAA,CAACtB,SAAS;QACR6L,KAAK,EAAEC,MAAM,CAACO,KAAM;QACpBC,WAAW,EAAC,qBAAqB;QACjCC,YAAY,EAAC,SAAS;QACtBC,KAAK,EAAEpK,UAAU,GAAGA,UAAU,CAACqK,QAAQ,CAAC,CAAC,GAAG,EAAG;QAC/CC,YAAY,EAAGC,IAAI,IAAKtK,aAAa,CAACuK,MAAM,CAACD,IAAI,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,EACF9K,OAAA,CAACtB,SAAS;QACR6L,KAAK,EAAEC,MAAM,CAACO,KAAM;QACpBC,WAAW,EAAC,0BAA0B;QACtCC,YAAY,EAAC,SAAS;QACtBC,KAAK,EAAElK,cAAc,GAAGA,cAAc,CAACmK,QAAQ,CAAC,CAAC,GAAG,EAAG;QACvDC,YAAY,EAAGC,IAAI,IAAKpK,iBAAiB,CAACqK,MAAM,CAACD,IAAI,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,EACF9K,OAAA,CAACrB,MAAM;QAAC+L,KAAK,EAAC,0BAAoB;QAACP,OAAO,EAAEhJ;MAAU;QAAAwJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACzD9K,OAAA,CAACrB,MAAM;QACL+L,KAAK,EAAC,qCAA+B;QACrCP,OAAO,EAAEjJ;MAAgB;QAAAyJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,EACF9K,OAAA,CAACrB,MAAM;QACL+L,KAAK,EAAC,mBAAa;QACnBP,OAAO,EAAEA,CAAA,KAAM;UACbF,WAAW,CAAC,CAAC;QACf;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAE/B;AAEA,MAAMN,MAAM,GAAG3L,UAAU,CAAC+J,MAAM,CAAC;EAC/B6B,SAAS,EAAE;IACTc,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACDf,KAAK,EAAE;IACLgB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDb,KAAK,EAAE;IACLc,KAAK,EAAE,GAAG;IACVJ,OAAO,EAAE,EAAE;IACXK,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfJ,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAe3L,UAAU","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}