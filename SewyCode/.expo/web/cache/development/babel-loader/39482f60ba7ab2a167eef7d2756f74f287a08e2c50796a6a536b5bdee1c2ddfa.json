{"ast":null,"code":"var _jsxFileName = \"/Users/clara/Desktop/Sewy/SewyCode/components/TShirt.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Svg, { Rect, Line, Path } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\nimport NumericInput from \"react-native-numeric-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TShirt() {\n  const [taille, setTaille] = useState(0);\n  const [poitrine, setPoitrine] = useState(0);\n  const [longueurTShirt, setLongueurTShirt] = useState(0);\n  const [largeurTShirt, setLargeurTShirt] = useState(0);\n  const [carrure, setCarrure] = useState(0);\n  const [buste, setBuste] = useState(0);\n  const [epaule, setEpaule] = useState(0);\n  const [biceps, setBiceps] = useState(0);\n  const [longueurManche, setLongueurManche] = useState(0);\n  const longueurTotale = Math.max(longueurTShirt, longueurManche) + 10;\n  const largeurTotale = 2 * largeurTShirt + biceps + 10;\n  const cmToPx = cm => {\n    const pixelRatio = PixelRatio.get();\n    const pxPerCm = 37.8;\n    return cm * pxPerCm * pixelRatio;\n  };\n  const saveAsPDF = async ({\n    longueurTotale,\n    largeurTotale\n  }) => {\n    const svgWidth = 1180;\n    const svgHeight = 1500;\n    longueurTotale = cmToPx(longueurTotale);\n    largeurTotale = cmToPx(largeurTotale);\n    const numPagesWidth = Math.ceil(largeurTotale / svgWidth);\n    console.log(numPagesWidth);\n    const numPagesHeight = Math.ceil(longueurTotale / svgHeight);\n    let htmlContent = \"<html><body>\";\n    for (let i = 0; i < numPagesWidth; i++) {\n      for (let j = 0; j < numPagesHeight; j++) {\n        let xA = -i * svgWidth + 10;\n        let yA = -j * svgHeight + 10;\n        let xB = xA + buste / 2 + 4;\n        let yD = yA + longueurTShirt;\n        let yE = yA + 1 / 48 * poitrine + 0.2;\n        let xG = xA + 1 / 12 * poitrine;\n        let xL1 = xG + 1 / 12 * poitrine;\n        let yL1 = yA + 4.5;\n        let xF1 = buste / 4 + 2;\n        let yF1 = taille / 8 + poitrine / 48 + 1.7;\n        let xD1 = xA + largeurTShirt / 2 + 2;\n        let yD1 = yA + longueurTShirt + 4;\n        let xM = carrure / 4;\n        let yM = taille / 8 + poitrine / 48 + 1.7 - 5;\n        let controMx = carrure / 2 - 200;\n        let controMy = taille / 8 + poitrine / 48 + 1.7 - 5;\n        _jsxDEV(Path, {\n          d: \"M${xF1} ${yF1} C${controMx} ${controMy}, ${0} ${0}, ${xD1} ${yD1}\",\n          fill: \"none\",\n          stroke: \"orange\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this);\n        const svg = `\n        <Svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${svgWidth}\" height=\"${svgHeight}\">\n         \n          <Rect x=\"0\" y=\"0\" width=\"${svgWidth}\" height=\"${svgHeight}\" stroke=\"red\" stroke-width=\"5\" fill=\"transparent\"/>\n\n        <!--- AB --->\n          <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xB}\" y2=\"${yA}\" stroke=\"blue\" stroke-width=\"2\" \"/>\n\n        <!--- AD --->\n          <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xA}\" y2=\"${yD}\" stroke=\"red\" stroke-width=\"2\" \"/>\n\n        <!--- EG  --->\n        <line x1=\"${xA}\" y1=\"${yE}\" x2=\"${xG}\" y2=\"${yA}\" stroke=\"green\" stroke-width=\"2\" \"/>\n\n        <!--- GL1 --->\n        <line x1=\"${xG}\" y1=\"${yA}\" x2=\"${xL1}\" y2=\"${yL1}\" stroke=\"red\" stroke-width=\"2\" \"/>\n\n        <!--- L1F1 --->\n        <line x1=\"${xL1}\" y1=\"${yL1}\" x2=\"${xF1}\" y2=\"${yF1}\" stroke=\"brown\" stroke-width=\"2\" \"/>\n\n        <!--- F1D1 --->\n      <Path d=\"M${xF1} ${yF1} C${controMx} ${controMy}, ${controMx} ${controMy}, ${xD1} ${yD1}\" fill=\"none\" stroke=\"orange\" strokeWidth=\"2\" />\n      <Circle cx=\"${controMx}\" cy=\"${controMy}\" r=\"5\" fill=\"red\" />\n        <!--- F1M --->\n        <line x1=\"${xF1}\" y1=\"${yF1}\" x2=\"${xM}\" y2=\"${yM}\" stroke=\"black\" stroke-width=\"2\" \"/>\n\n        <!--- D1D --->\n        <line x1=\"${xD1}\" y1=\"${yD1}\" x2=\"${xA}\" y2=\"${yD}\" stroke=\"grey\" stroke-width=\"2\" \"/>\n  \n        </Svg>\n      `;\n        htmlContent += svg;\n      }\n    }\n    htmlContent += \"</body></html>\";\n    const file = await printToFileAsync({\n      html: htmlContent,\n      base64: false\n    });\n    await shareAsync(file.uri);\n  };\n  return _jsxDEV(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Patron T-Shirt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Taille\",\n        keyboardType: \"numeric\",\n        value: taille,\n        onChangeText: text => setTaille(Number(cmToPx(text)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Largeur T-shirt\",\n        keyboardType: \"numeric\",\n        value: largeurTShirt,\n        onChangeText: text => setLargeurTShirt(Number(cmToPx(text)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Longueur T-shirt\",\n        keyboardType: \"numeric\",\n        value: longueurTShirt,\n        onChangeText: text => setLongueurTShirt(Number(cmToPx(text)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de biceps\",\n        keyboardType: \"numeric\",\n        value: biceps,\n        onChangeText: text => setBiceps(Number(cmToPx(text)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de poitrine\",\n        keyboardType: \"numeric\",\n        value: Number.parseInt(poitrine, 10),\n        onChangeText: text => setPoitrine(Number(cmToPx(text)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Carrure\",\n        keyboardType: \"numeric\",\n        value: Number.parseInt(carrure, 10),\n        onChangeText: text => setCarrure(Number(cmToPx(text)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de Buste\",\n        keyboardType: \"numeric\",\n        value: Number.parseInt(buste, 10),\n        onChangeText: text => setBuste(Number(cmToPx(text)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Longueur de manche\",\n        keyboardType: \"numeric\",\n        value: epaule,\n        onChangeText: text => {\n          setEpaule(Number(cmToPx(text)));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Longueur de manche\",\n        keyboardType: \"numeric\",\n        value: longueurManche,\n        onChangeText: text => {\n          setLongueurManche(Number(cmToPx(text)));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"T\\xE9l\\xE9charger en PDF\",\n        onPress: () => {\n          saveAsPDF({\n            longueurTotale,\n            largeurTotale\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  input: {\n    width: 300,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","Keyboard","TouchableWithoutFeedback","PixelRatio","Svg","Rect","Line","Path","printToFileAsync","shareAsync","NumericInput","jsxDEV","_jsxDEV","TShirt","taille","setTaille","poitrine","setPoitrine","longueurTShirt","setLongueurTShirt","largeurTShirt","setLargeurTShirt","carrure","setCarrure","buste","setBuste","epaule","setEpaule","biceps","setBiceps","longueurManche","setLongueurManche","longueurTotale","Math","max","largeurTotale","cmToPx","cm","pixelRatio","get","pxPerCm","saveAsPDF","svgWidth","svgHeight","numPagesWidth","ceil","console","log","numPagesHeight","htmlContent","i","j","xA","yA","xB","yD","yE","xG","xL1","yL1","xF1","yF1","xD1","yD1","xM","yM","controMx","controMy","d","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","svg","file","html","base64","uri","onPress","dismiss","accessible","children","style","styles","container","title","input","placeholder","keyboardType","value","onChangeText","text","Number","parseInt","create","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","width","borderWidth","borderColor","borderRadius"],"sources":["/Users/clara/Desktop/Sewy/SewyCode/components/TShirt.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  TextInput,\n  Button,\n  Text,\n  StyleSheet,\n  Keyboard,\n  TouchableWithoutFeedback,\n  PixelRatio,\n} from \"react-native\";\nimport Svg, { Rect, Line, Path } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\nimport NumericInput from \"react-native-numeric-input\";\n\n//Fonction permettant d'enregistrer un dessin SVG au format PDF. Elle prend en paramètre la largeur et la longueur du rectangle à dessiner.\n\nexport function TShirt() {\n  const [taille, setTaille] = useState(0);\n  const [poitrine, setPoitrine] = useState(0);\n  const [longueurTShirt, setLongueurTShirt] = useState(0);\n  const [largeurTShirt, setLargeurTShirt] = useState(0);\n  const [carrure, setCarrure] = useState(0);\n  const [buste, setBuste] = useState(0);\n  const [epaule, setEpaule] = useState(0);\n  const [biceps, setBiceps] = useState(0);\n  const [longueurManche, setLongueurManche] = useState(0);\n\n  const longueurTotale = Math.max(longueurTShirt, longueurManche) + 10;\n  const largeurTotale = 2 * largeurTShirt + biceps + 10;\n\n  const cmToPx = (cm) => {\n    // Densité de pixels de l'appareil\n    const pixelRatio = PixelRatio.get();\n\n    // On considère qu'une valeur de 1 cm = 37.8 pixels à une densité de 1\n    // (Cette valeur est basée sur le standard CSS de 96 DPI où 1 pouce = 2.54 cm)\n    const pxPerCm = 37.8;\n\n    // Conversion finale en tenant compte de la densité\n    return cm * pxPerCm * pixelRatio;\n  };\n\n  const saveAsPDF = async ({ longueurTotale, largeurTotale }) => {\n    const svgWidth = 1180;\n    const svgHeight = 1500;\n\n    longueurTotale = cmToPx(longueurTotale);\n    largeurTotale = cmToPx(largeurTotale);\n\n    const numPagesWidth = Math.ceil(largeurTotale / svgWidth);\n    console.log(numPagesWidth);\n    const numPagesHeight = Math.ceil(longueurTotale / svgHeight);\n\n    let htmlContent = \"<html><body>\";\n    for (let i = 0; i < numPagesWidth; i++) {\n      for (let j = 0; j < numPagesHeight; j++) {\n        //Coordonnées des points\n        let xA = -i * svgWidth + 10;\n        let yA = -j * svgHeight + 10;\n\n        let xB = xA + buste / 2 + 4;\n\n        let yD = yA + longueurTShirt;\n\n        let yE = yA + (1 / 48) * poitrine + 0.2;\n\n        let xG = xA + (1 / 12) * poitrine;\n\n        let xL1 = xG + (1 / 12) * poitrine;\n        let yL1 = yA + 4.5;\n\n        let xF1 = buste / 4 + 2;\n        let yF1 = taille / 8 + poitrine / 48 + 1.7;\n\n        let xD1 = xA + largeurTShirt / 2 + 2;\n        let yD1 = yA + longueurTShirt + 4;\n\n        let xM = carrure / 4;\n        let yM = taille / 8 + poitrine / 48 + 1.7 - 5;\n\n        let controMx = carrure / 2 - 200;\n        let controMy = taille / 8 + poitrine / 48 + 1.7 - 5;\n\n        <Path\n          d=\"M${xF1} ${yF1} C${controMx} ${controMy}, ${0} ${0}, ${xD1} ${yD1}\"\n          fill=\"none\"\n          stroke=\"orange\"\n          strokeWidth=\"2\"\n        />;\n\n        const svg = `\n        <Svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${svgWidth}\" height=\"${svgHeight}\">\n         \n          <Rect x=\"0\" y=\"0\" width=\"${svgWidth}\" height=\"${svgHeight}\" stroke=\"red\" stroke-width=\"5\" fill=\"transparent\"/>\n\n        <!--- AB --->\n          <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xB}\" y2=\"${yA}\" stroke=\"blue\" stroke-width=\"2\" \"/>\n\n        <!--- AD --->\n          <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xA}\" y2=\"${yD}\" stroke=\"red\" stroke-width=\"2\" \"/>\n\n        <!--- EG  --->\n        <line x1=\"${xA}\" y1=\"${yE}\" x2=\"${xG}\" y2=\"${yA}\" stroke=\"green\" stroke-width=\"2\" \"/>\n\n        <!--- GL1 --->\n        <line x1=\"${xG}\" y1=\"${yA}\" x2=\"${xL1}\" y2=\"${yL1}\" stroke=\"red\" stroke-width=\"2\" \"/>\n\n        <!--- L1F1 --->\n        <line x1=\"${xL1}\" y1=\"${yL1}\" x2=\"${xF1}\" y2=\"${yF1}\" stroke=\"brown\" stroke-width=\"2\" \"/>\n\n        <!--- F1D1 --->\n      <Path d=\"M${xF1} ${yF1} C${controMx} ${controMy}, ${controMx} ${controMy}, ${xD1} ${yD1}\" fill=\"none\" stroke=\"orange\" strokeWidth=\"2\" />\n      <Circle cx=\"${controMx}\" cy=\"${controMy}\" r=\"5\" fill=\"red\" />\n        <!--- F1M --->\n        <line x1=\"${xF1}\" y1=\"${yF1}\" x2=\"${xM}\" y2=\"${yM}\" stroke=\"black\" stroke-width=\"2\" \"/>\n\n        <!--- D1D --->\n        <line x1=\"${xD1}\" y1=\"${yD1}\" x2=\"${xA}\" y2=\"${yD}\" stroke=\"grey\" stroke-width=\"2\" \"/>\n  \n        </Svg>\n      `;\n        htmlContent += svg;\n      }\n    }\n    htmlContent += \"</body></html>\";\n\n    const file = await printToFileAsync({ html: htmlContent, base64: false });\n    await shareAsync(file.uri);\n  };\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\n      <View style={styles.container}>\n        <Text style={styles.title}>Patron T-Shirt</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Taille\"\n          keyboardType=\"numeric\"\n          value={taille}\n          onChangeText={(text) => setTaille(Number(cmToPx(text)))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Largeur T-shirt\"\n          keyboardType=\"numeric\"\n          value={largeurTShirt}\n          onChangeText={(text) => setLargeurTShirt(Number(cmToPx(text)))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Longueur T-shirt\"\n          keyboardType=\"numeric\"\n          value={longueurTShirt}\n          onChangeText={(text) => setLongueurTShirt(Number(cmToPx(text)))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de biceps\"\n          keyboardType=\"numeric\"\n          value={biceps}\n          onChangeText={(text) => setBiceps(Number(cmToPx(text)))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de poitrine\"\n          keyboardType=\"numeric\"\n          value={Number.parseInt(poitrine, 10)}\n          onChangeText={(text) => setPoitrine(Number(cmToPx(text)))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Carrure\"\n          keyboardType=\"numeric\"\n          value={Number.parseInt(carrure, 10)}\n          onChangeText={(text) => setCarrure(Number(cmToPx(text)))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de Buste\"\n          keyboardType=\"numeric\"\n          value={Number.parseInt(buste, 10)}\n          onChangeText={(text) => setBuste(Number(cmToPx(text)))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Longueur de manche\"\n          keyboardType=\"numeric\"\n          value={epaule}\n          onChangeText={(text) => {\n            setEpaule(Number(cmToPx(text)));\n          }}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Longueur de manche\"\n          keyboardType=\"numeric\"\n          value={longueurManche}\n          onChangeText={(text) => {\n            setLongueurManche(Number(cmToPx(text)));\n          }}\n        />\n        <Button\n          title=\"Télécharger en PDF\"\n          onPress={() => {\n            saveAsPDF({ longueurTotale, largeurTotale });\n          }}\n        />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  input: {\n    width: 300,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n});\n\n/*import React, { useState } from \"react\";\nimport { ScrollView, View, Text } from \"react-native\";\nimport Svg, { Circle, Path } from \"react-native-svg\";\n\nconst TShirt = () => {\n  // États pour les points\n  const [start, setStart] = useState({ x: 50, y: 250 });\n  const [end, setEnd] = useState({ x: 350, y: 250 });\n  const [control1, setControl1] = useState({ x: 150, y: 50 });\n  const [control2, setControl2] = useState({ x: 250, y: 450 });\n\n  // Fonction pour gérer le déplacement des points\n  const handlePointMove = (setter) => (e) => {\n    const svg = e.target.closest(\"svg\");\n    const rect = svg.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setter({ x, y });\n  };\n\n  return (\n    <ScrollView style={{ padding: 16 }}>\n      <Svg\n        width=\"400\"\n        height=\"800\"\n        style={{ borderWidth: 2, borderColor: \"gray\" }}\n      >\n      \n        <Path\n          d={`M${start.x} ${start.y} C${control1.x} ${control1.y}, ${control2.x} ${control2.y}, ${end.x} ${end.y}`}\n          fill=\"none\"\n          stroke=\"blue\"\n          strokeWidth=\"3\"\n        />\n\n\n        <Circle\n          cx={start.x}\n          cy={start.y}\n          r=\"10\"\n          fill=\"red\"\n          // onMouseDown ne fonctionne pas en React Native\n        />\n        <Circle cx={end.x} cy={end.y} r=\"10\" fill=\"green\" />\n        <Circle cx={control1.x} cy={control1.y} r=\"8\" fill=\"orange\" />\n        <Circle cx={control2.x} cy={control2.y} r=\"8\" fill=\"purple\" />\n      </Svg>\n\n      <View style={{ marginTop: 16 }}>\n        <Text>Coordonnées</Text>\n        <Text>\n          Départ: ({start.x}, {start.y})\n        </Text>\n        <Text>\n          Fin: ({end.x}, {end.y})\n        </Text>\n        <Text>\n          Contrôle 1: ({control1.x}, {control1.y})\n        </Text>\n        <Text>\n          Contrôle 2: ({control2.x}, {control2.y})\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default TShirt;\n*/\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}