{"ast":null,"code":"var _jsxFileName = \"/Users/clara/Desktop/Sewy/SewyCode/components/PDF.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Svg, { Rect } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PDF = () => {\n  const [largeur, setLargeur] = useState(0);\n  const [longueur, setLongueur] = useState(0);\n  const saveAsPDF = async ({\n    largeur,\n    longueur\n  }) => {\n    const svgWidth = 1180;\n    const svgHeight = 1500;\n    const numPagesWidth = Math.ceil(largeur / svgWidth);\n    const numPagesHeight = Math.ceil(longueur / svgHeight);\n    let htmlContent = \"<html><body>\";\n    for (let i = 0; i < numPagesWidth; i++) {\n      for (let j = 0; j < numPagesHeight; j++) {\n        const svg = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${svgWidth}\" height=\"${svgHeight}\">\n          <rect x=\"0\" y=\"0\" width=\"${svgWidth}\" height=\"${svgHeight}\" stroke=\"red\" stroke-width=\"5\" fill=\"transparent\"/>\n          <rect x=\"${-i * svgWidth + 10}\" y=\"${-j * svgHeight + 10}\" width=\"${largeur}\" height=\"${longueur}\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\"/>\n        </svg>\n      `;\n        htmlContent += svg;\n      }\n    }\n    htmlContent += \"</body></html>\";\n    const file = await printToFileAsync({\n      html: htmlContent,\n      base64: false\n    });\n    await shareAsync(file.uri);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Tracer un rectangle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Largeur\",\n      keyboardType: \"numeric\",\n      value: largeur,\n      onChangeText: text => setLargeur(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Longueur\",\n      keyboardType: \"numeric\",\n      value: longueur,\n      onChangeText: text => setLongueur(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"T\\xE9l\\xE9charger en PDF\",\n      onPress: () => saveAsPDF({\n        largeur,\n        longueur\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  input: {\n    width: \"100%\",\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10\n  }\n});\nexport default PDF;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","Alert","Svg","Rect","printToFileAsync","shareAsync","jsxDEV","_jsxDEV","PDF","largeur","setLargeur","longueur","setLongueur","saveAsPDF","svgWidth","svgHeight","numPagesWidth","Math","ceil","numPagesHeight","htmlContent","i","j","svg","file","html","base64","uri","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","keyboardType","value","onChangeText","text","onPress","create","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","width","borderWidth","borderColor","borderRadius"],"sources":["/Users/clara/Desktop/Sewy/SewyCode/components/PDF.js"],"sourcesContent":["//Ce composant est un formulaire qui permet de dessiner un rectangle. Il contient des champs pour la largeur et la longueur du rectangle. Lorsque l'utilisateur soumet le formulaire, un rectangle est dessiné avec les dimensions spécifiées. L'utilisateur peut également sauvegarder le rectangle en tant que fichier SVG ou le télécharger en tant que fichier PDF.\nimport React, { useState } from \"react\";\nimport { View, TextInput, Button, Text, StyleSheet, Alert } from \"react-native\";\nimport Svg, { Rect } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\n\n//Fonction permettant d'enregistrer un dessin SVG au format PDF. Elle prend en paramètre la largeur et la longueur du rectangle à dessiner.\n\nconst PDF = () => {\n  const [largeur, setLargeur] = useState(0);\n  const [longueur, setLongueur] = useState(0);\n\n  const saveAsPDF = async ({ largeur, longueur }) => {\n    const svgWidth = 1180;\n    const svgHeight = 1500;\n\n    const numPagesWidth = Math.ceil(largeur / svgWidth);\n    const numPagesHeight = Math.ceil(longueur / svgHeight);\n\n    let htmlContent = \"<html><body>\";\n    for (let i = 0; i < numPagesWidth; i++) {\n      for (let j = 0; j < numPagesHeight; j++) {\n        const svg = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${svgWidth}\" height=\"${svgHeight}\">\n          <rect x=\"0\" y=\"0\" width=\"${svgWidth}\" height=\"${svgHeight}\" stroke=\"red\" stroke-width=\"5\" fill=\"transparent\"/>\n          <rect x=\"${-i * svgWidth + 10}\" y=\"${\n          -j * svgHeight + 10\n        }\" width=\"${largeur}\" height=\"${longueur}\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\"/>\n        </svg>\n      `;\n        htmlContent += svg;\n      }\n    }\n    htmlContent += \"</body></html>\";\n\n    const file = await printToFileAsync({ html: htmlContent, base64: false });\n    await shareAsync(file.uri);\n  };\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Tracer un rectangle</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Largeur\"\n        keyboardType=\"numeric\"\n        value={largeur}\n        onChangeText={(text) => setLargeur(text)}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Longueur\"\n        keyboardType=\"numeric\"\n        value={longueur}\n        onChangeText={(text) => setLongueur(text)}\n      />\n      <Button\n        title=\"Télécharger en PDF\"\n        onPress={() => saveAsPDF({ largeur, longueur })}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  input: {\n    width: \"100%\",\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n});\n\nexport default PDF;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}