{"ast":null,"code":"var _jsxFileName = \"/Users/clara/Desktop/Sewy/SewyCode/App.jsx\";\nimport React, { useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport BottomNavBar from \"./navigation/BottomNavBar.js\";\nimport Connexion from \"./screens/Connexion.js\";\nimport Inscription from \"./screens/Inscription.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stack = createStackNavigator();\nexport default function App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true);\n  };\n  return _jsxDEV(NavigationContainer, {\n    children: isAuthenticated ? _jsxDEV(BottomNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : _jsxDEV(Stack.Navigator, {\n      initialRouteName: \"Connexion\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsxDEV(Stack.Screen, {\n        name: \"Connexion\",\n        children: props => _jsxDEV(Connexion, Object.assign({}, props, {\n          onLoginSuccess: handleLoginSuccess\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), _jsxDEV(Stack.Screen, {\n        name: \"Inscription\",\n        component: Inscription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useState","NavigationContainer","createStackNavigator","BottomNavBar","Connexion","Inscription","jsxDEV","_jsxDEV","Stack","App","isAuthenticated","setIsAuthenticated","handleLoginSuccess","children","fileName","_jsxFileName","lineNumber","columnNumber","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","props","Object","assign","onLoginSuccess","component"],"sources":["/Users/clara/Desktop/Sewy/SewyCode/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport BottomNavBar from \"./navigation/BottomNavBar.js\";\nimport Connexion from \"./screens/Connexion.js\";\nimport Inscription from \"./screens/Inscription.js\";\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  \n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true);\n  };\n  \n  // Si l'utilisateur est authentifié, afficher BottomNavBar (qui contient Home)\n  // Sinon, afficher les écrans de connexion et d'inscription\n  return (\n    <NavigationContainer>\n      {isAuthenticated ? (\n        <BottomNavBar />\n      ) : (\n        <Stack.Navigator initialRouteName=\"Connexion\" screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"Connexion\">\n            {props => <Connexion {...props} onLoginSuccess={handleLoginSuccess} />}\n          </Stack.Screen>\n          <Stack.Screen name=\"Inscription\" component={Inscription} />\n        </Stack.Navigator>\n      )}\n    </NavigationContainer>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGN,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASO,GAAGA,CAAA,EAAG;EAC5B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMY,kBAAkB,GAAGA,CAAA,KAAM;IAC/BD,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAID,OACEJ,OAAA,CAACN,mBAAmB;IAAAY,QAAA,EACjBH,eAAe,GACdH,OAAA,CAACJ,YAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAEhBV,OAAA,CAACC,KAAK,CAACU,SAAS;MAACC,gBAAgB,EAAC,WAAW;MAACC,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAR,QAAA,GAClFN,OAAA,CAACC,KAAK,CAACc,MAAM;QAACC,IAAI,EAAC,WAAW;QAAAV,QAAA,EAC3BW,KAAK,IAAIjB,OAAA,CAACH,SAAS,EAAAqB,MAAA,CAAAC,MAAA,KAAKF,KAAK;UAAEG,cAAc,EAAEf;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,EACfV,OAAA,CAACC,KAAK,CAACc,MAAM;QAACC,IAAI,EAAC,aAAa;QAACK,SAAS,EAAEvB;MAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAClB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAE1B","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}