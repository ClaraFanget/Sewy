{"ast":null,"code":"var _jsxFileName = \"/Users/clara/Desktop/Sewy/SewyCode/components/TShirtFinal.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Svg, { Rect, Line, Path, Circle } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\nimport * as Print from \"expo-print\";\nimport { PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport * as FileSystem from \"expo-file-system\";\nimport * as Sharing from \"expo-sharing\";\nimport { encode } from \"base64-arraybuffer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TShirtFinal() {\n  const [taille, setTaille] = useState(0);\n  const [poitrine, setPoitrine] = useState(0);\n  const [longueurDos, setLongueurDos] = useState(0);\n  const [buste, setBuste] = useState(0);\n  const [distanceEpaules, setDistanceEpaules] = useState(0);\n  const [carrure, setCarrure] = useState(0);\n  const [tourTaille, setTourTaille] = useState(0);\n  const [longueurDevant, setLongueurDevant] = useState(0);\n  const setDefaultMeasurements = () => {\n    setTaille(165);\n    setPoitrine(88);\n    setLongueurDos(42);\n    setBuste(86);\n    setDistanceEpaules(38);\n    setCarrure(34);\n    setTourTaille(72);\n    setLongueurDevant(48);\n    saveAsPDF();\n  };\n  const calculatePDFDimensions = () => {\n    const a4Width = 21;\n    const a4Height = 29.7;\n    const ptsPerCm = 72 / 2.54;\n    return {\n      widthPts: a4Width * ptsPerCm,\n      heightPts: a4Height * ptsPerCm\n    };\n  };\n  const drawLine = (pdfDoc, page, x1, y1, x2, y2, thickness, color, dimensions) => {\n    const {\n      widthPts,\n      heightPts\n    } = dimensions;\n    const needsNewPageHorizontally = x2 > widthPts;\n    const needsNewPageVertically = y2 > heightPts;\n    if (!needsNewPageHorizontally && !needsNewPageVertically) {\n      page.drawLine({\n        start: {\n          x: x1,\n          y: y1\n        },\n        end: {\n          x: x2,\n          y: y2\n        },\n        thickness,\n        color\n      });\n      return page;\n    }\n    let finalX = Math.min(x2, widthPts);\n    let finalY = Math.min(y2, heightPts);\n    page.drawLine({\n      start: {\n        x: x1,\n        y: y1\n      },\n      end: {\n        x: finalX,\n        y: finalY\n      },\n      thickness,\n      color\n    });\n    const newPage = pdfDoc.addPage([widthPts, heightPts]);\n    const remainingX = needsNewPageHorizontally ? x2 - widthPts : x2;\n    const remainingY = needsNewPageVertically ? y2 - heightPts : y2;\n    newPage.drawLine({\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: needsNewPageHorizontally ? remainingX : x2,\n        y: needsNewPageVertically ? remainingY : y2\n      },\n      thickness,\n      color\n    });\n    return newPage;\n  };\n  const drawPattern = (pdfDoc, page, dimensions) => {\n    const {\n      widthPts,\n      heightPts\n    } = dimensions;\n    const ptsPerCm = 72 / 2.54;\n    let xA = 0;\n    let yA = 0;\n    let xB = xA + (buste / 2 + 4) * ptsPerCm;\n    let yB = yA;\n    console.log(\"xB\", xB);\n    console.log(\"Buste\", buste);\n    let xD = xA;\n    let yD = yA + longueurDos * ptsPerCm;\n    let xE = xA;\n    let yE = yA + (poitrine / 48 + 0.2) * ptsPerCm;\n    let xE1 = xE;\n    let yE1 = yE + 4.5 * ptsPerCm;\n    let hauteurEmmanchure = (taille / 8 + poitrine / 48 + 1.7) * ptsPerCm;\n    let xF = xA;\n    let yF = yA + hauteurEmmanchure;\n    let xG = xA + poitrine / 12 * ptsPerCm;\n    let yG = yA;\n    let xH = xA + carrure / 2 * ptsPerCm;\n    let yH = yA;\n    let xF1 = xF + (buste / 4 + 2) * ptsPerCm;\n    let yF1 = yF;\n    let xD1 = xD + (tourTaille / 4 + 2) * ptsPerCm;\n    let yD1 = yD;\n    let xI = xH;\n    let yI = yF;\n    let xL = xH;\n    let yL = yE1;\n    let xL1 = xE1 + distanceEpaules / 2 * ptsPerCm;\n    let yL1 = yE1;\n    let xM = xI + 0.3 * ptsPerCm;\n    let yM = yI - 5 * ptsPerCm;\n    let controlX1 = (xL1 + xM) / 2 - 4;\n    let controlY1 = yL1 + 150;\n    let controlX2 = xM - 120;\n    let controlY2 = yM + 60;\n    try {\n      page = drawLine(pdfDoc, page, x1, y1, x2, y2, 1, rgb(0, 0, 0), dimensions);\n    } catch (error) {\n      console.error(\"Error drawing line:\", error);\n    }\n  };\n  const saveAsPDF = async () => {\n    const dimensions = calculatePDFDimensions();\n    const pdfDoc = await PDFDocument.create();\n    const page = pdfDoc.addPage([dimensions.widthPts, dimensions.heightPts]);\n    drawPattern(pdfDoc, page, dimensions);\n    const pdfBytes = await pdfDoc.save();\n    const pdfBase64 = encode(pdfBytes);\n    const fileUri = FileSystem.cacheDirectory + \"pattern.pdf\";\n    await FileSystem.writeAsStringAsync(fileUri, pdfBase64, {\n      encoding: FileSystem.EncodingType.Base64\n    });\n    await shareAsync(fileUri);\n  };\n  const drawSquareLib = async () => {\n    const dimensions = calculatePDFDimensions();\n    const pdfDoc = await PDFDocument.create();\n    const page = pdfDoc.addPage([dimensions.widthPts, dimensions.heightPts]);\n    page.drawSquare({\n      x: 20,\n      y: 20,\n      size: 141.73,\n      borderWidth: 2,\n      color: rgb(1, 1, 1)\n    });\n    const pdfBytes = await pdfDoc.save();\n    const pdfBase64 = encode(pdfBytes);\n    const fileUri = FileSystem.cacheDirectory + \"pattern.pdf\";\n    await FileSystem.writeAsStringAsync(fileUri, pdfBase64, {\n      encoding: FileSystem.EncodingType.Base64\n    });\n    await shareAsync(fileUri);\n  };\n  return _jsxDEV(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"TShirtFinal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Hauteur totale (cm)\",\n        keyboardType: \"numeric\",\n        value: taille ? taille.toString() : \"\",\n        onChangeText: text => setTaille(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de poitrine (cm)\",\n        keyboardType: \"numeric\",\n        value: poitrine ? poitrine.toString() : \"\",\n        onChangeText: text => setPoitrine(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Hauteur dos (cm)\",\n        keyboardType: \"numeric\",\n        value: longueurDos ? longueurDos.toString() : \"\",\n        onChangeText: text => setLongueurDos(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de buste (cm)\",\n        keyboardType: \"numeric\",\n        value: buste ? buste.toString() : \"\",\n        onChangeText: text => setBuste(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Distance entre les \\xE9paules (cm)\",\n        keyboardType: \"numeric\",\n        value: distanceEpaules ? distanceEpaules.toString() : \"\",\n        onChangeText: text => setDistanceEpaules(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Carrure - largeur du dos (cm)\",\n        keyboardType: \"numeric\",\n        value: carrure ? carrure.toString() : \"\",\n        onChangeText: text => setCarrure(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de taille (cm)\",\n        keyboardType: \"numeric\",\n        value: tourTaille ? tourTaille.toString() : \"\",\n        onChangeText: text => setTourTaille(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Longueur cou taille (cm)\",\n        keyboardType: \"numeric\",\n        value: longueurDevant ? longueurDevant.toString() : \"\",\n        onChangeText: text => setLongueurDevant(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"T\\xE9l\\xE9charger en PDF\",\n        onPress: saveAsPDF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"T\\xE9l\\xE9charger Avec Mensurations\",\n        onPress: setDefaultMeasurements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Carr\\xE9 PDF Lib\",\n        onPress: drawSquareLib\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  input: {\n    width: 300,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10\n  }\n});\nexport default TShirtFinal;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","Keyboard","TouchableWithoutFeedback","ScrollView","Svg","Rect","Line","Path","Circle","printToFileAsync","shareAsync","Print","PDFDocument","rgb","StandardFonts","FileSystem","Sharing","encode","jsxDEV","_jsxDEV","TShirtFinal","taille","setTaille","poitrine","setPoitrine","longueurDos","setLongueurDos","buste","setBuste","distanceEpaules","setDistanceEpaules","carrure","setCarrure","tourTaille","setTourTaille","longueurDevant","setLongueurDevant","setDefaultMeasurements","saveAsPDF","calculatePDFDimensions","a4Width","a4Height","ptsPerCm","widthPts","heightPts","drawLine","pdfDoc","page","x1","y1","x2","y2","thickness","color","dimensions","needsNewPageHorizontally","needsNewPageVertically","start","x","y","end","finalX","Math","min","finalY","newPage","addPage","remainingX","remainingY","drawPattern","xA","yA","xB","yB","console","log","xD","yD","xE","yE","xE1","yE1","hauteurEmmanchure","xF","yF","xG","yG","xH","yH","xF1","yF1","xD1","yD1","xI","yI","xL","yL","xL1","yL1","xM","yM","controlX1","controlY1","controlX2","controlY2","error","create","pdfBytes","save","pdfBase64","fileUri","cacheDirectory","writeAsStringAsync","encoding","EncodingType","Base64","drawSquareLib","drawSquare","size","borderWidth","onPress","dismiss","accessible","children","style","styles","container","title","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","keyboardType","value","toString","onChangeText","text","Number","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","width","borderColor","borderRadius"],"sources":["/Users/clara/Desktop/Sewy/SewyCode/components/TShirtFinal.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  TextInput,\n  Button,\n  Text,\n  StyleSheet,\n  Keyboard,\n  TouchableWithoutFeedback,\n  ScrollView,\n} from \"react-native\";\nimport Svg, { Rect, Line, Path, Circle } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\nimport * as Print from \"expo-print\";\nimport { PDFDocument, rgb, StandardFonts } from \"pdf-lib\";\nimport * as FileSystem from \"expo-file-system\";\nimport * as Sharing from \"expo-sharing\";\nimport { encode } from \"base64-arraybuffer\";\n\nexport function TShirtFinal() {\n  const [taille, setTaille] = useState(0);\n  const [poitrine, setPoitrine] = useState(0);\n  const [longueurDos, setLongueurDos] = useState(0);\n  const [buste, setBuste] = useState(0);\n  const [distanceEpaules, setDistanceEpaules] = useState(0);\n  const [carrure, setCarrure] = useState(0);\n  const [tourTaille, setTourTaille] = useState(0);\n  const [longueurDevant, setLongueurDevant] = useState(0);\n\n  const setDefaultMeasurements = () => {\n    setTaille(165);\n    setPoitrine(88);\n    setLongueurDos(42);\n    setBuste(86);\n    setDistanceEpaules(38);\n    setCarrure(34);\n    setTourTaille(72);\n    setLongueurDevant(48);\n    saveAsPDF();\n  };\n\n  const calculatePDFDimensions = () => {\n    const a4Width = 21;\n    const a4Height = 29.7;\n    const ptsPerCm = 72 / 2.54;\n    return {\n      widthPts: a4Width * ptsPerCm,\n      heightPts: a4Height * ptsPerCm,\n    };\n  };\n\n  const drawLine = (\n    pdfDoc,\n    page,\n    x1,\n    y1,\n    x2,\n    y2,\n    thickness,\n    color,\n    dimensions\n  ) => {\n    const { widthPts, heightPts } = dimensions;\n\n    // Si la ligne dépasse en largeur ou hauteur\n    const needsNewPageHorizontally = x2 > widthPts;\n    const needsNewPageVertically = y2 > heightPts;\n\n    if (!needsNewPageHorizontally && !needsNewPageVertically) {\n      // Ligne normale\n      page.drawLine({\n        start: { x: x1, y: y1 },\n        end: { x: x2, y: y2 },\n        thickness,\n        color,\n      });\n      return page;\n    }\n\n    // Tronquons la ligne sur la première page\n    let finalX = Math.min(x2, widthPts);\n    let finalY = Math.min(y2, heightPts);\n\n    page.drawLine({\n      start: { x: x1, y: y1 },\n      end: { x: finalX, y: finalY },\n      thickness,\n      color,\n    });\n\n    // Créer une nouvelle page\n    const newPage = pdfDoc.addPage([widthPts, heightPts]);\n\n    // Calcul du point de reprise sur la nouvelle page\n    const remainingX = needsNewPageHorizontally ? x2 - widthPts : x2;\n    const remainingY = needsNewPageVertically ? y2 - heightPts : y2;\n\n    // Tracer la suite sur la nouvelle page\n    newPage.drawLine({\n      start: { x: 0, y: 0 },\n      end: {\n        x: needsNewPageHorizontally ? remainingX : x2,\n        y: needsNewPageVertically ? remainingY : y2,\n      },\n      thickness,\n      color,\n    });\n\n    return newPage;\n  };\n\n  const drawPattern = (pdfDoc, page, dimensions) => {\n    const { widthPts, heightPts } = dimensions;\n    const ptsPerCm = 72 / 2.54; // Points par cm\n    // Point A - Point de départ en haut à gauche\n    let xA = 0;\n    let yA = 0;\n\n    // AB = tour de buste/2 + 4 cm d'aisance\n    let xB = xA + (buste / 2 + 4) * ptsPerCm;\n    let yB = yA;\n\n    console.log(\"xB\", xB);\n    console.log(\"Buste\", buste);\n\n    // AD = hauteur dos (base du cou à la taille)\n    let xD = xA;\n    let yD = yA + longueurDos * ptsPerCm;\n\n    // AE = 1/48 tour de poitrine + 0.2 cm\n    let xE = xA;\n    let yE = yA + (poitrine / 48 + 0.2) * ptsPerCm;\n\n    // AE1 = descendre de 4.5 cm\n    let xE1 = xE;\n    let yE1 = yE + 4.5 * ptsPerCm;\n\n    // AF = 1/8 hauteur + 1/48 tour de poitrine + 1.7 cm (hauteur d'emmanchure)\n    let hauteurEmmanchure = (taille / 8 + poitrine / 48 + 1.7) * ptsPerCm;\n    let xF = xA;\n    let yF = yA + hauteurEmmanchure;\n\n    // AG = 1/12 tour de poitrine\n    let xG = xA + (poitrine / 12) * ptsPerCm;\n    let yG = yA;\n\n    // AH = 1/2 carrure (largeur du dos)\n    let xH = xA + (carrure / 2) * ptsPerCm;\n    let yH = yA; // H est au même niveau que F (hauteur d'emmanchure)\n\n    // FF1 = 1/4 tour de buste + 2 cm d'aisance\n    let xF1 = xF + (buste / 4 + 2) * ptsPerCm;\n    let yF1 = yF;\n\n    // DD1 = 1/4 tour de taille + 2 cm d'aisance\n    let xD1 = xD + (tourTaille / 4 + 2) * ptsPerCm;\n    let yD1 = yD;\n\n    // HI = perpendiculaire à FF1 (I est au même x que F1)\n    let xI = xH;\n    let yI = yF;\n\n    // HL = descendre de 4.5 cm\n    let xL = xH;\n    let yL = yE1;\n\n    // E1L1 = 1/2 distance entre les deux épaules\n    let xL1 = xE1 + (distanceEpaules / 2) * ptsPerCm;\n    let yL1 = yE1;\n\n    // IM = remonter de 5 cm et aller vers la droite de 0.3 cm\n    let xM = xI + 0.3 * ptsPerCm;\n    let yM = yI - 5 * ptsPerCm;\n\n    // Point de contrôle pour la courbe d'emmanchure\n    let controlX1 = (xL1 + xM) / 2 - 4;\n    let controlY1 = yL1 + 150;\n\n    let controlX2 = xM - 120;\n    let controlY2 = yM + 60;\n\n    // Add more drawing logic here...\n    try {\n      page = drawLine(\n        pdfDoc,\n        page,\n        x1,\n        y1,\n        x2,\n        y2,\n        1,\n        rgb(0, 0, 0),\n        dimensions\n      );\n    } catch (error) {\n      console.error(\"Error drawing line:\", error);\n    }\n  };\n\n  const saveAsPDF = async () => {\n    const dimensions = calculatePDFDimensions();\n    const pdfDoc = await PDFDocument.create();\n    const page = pdfDoc.addPage([dimensions.widthPts, dimensions.heightPts]);\n\n    drawPattern(pdfDoc, page, dimensions);\n\n    const pdfBytes = await pdfDoc.save();\n    const pdfBase64 = encode(pdfBytes);\n    const fileUri = FileSystem.cacheDirectory + \"pattern.pdf\";\n    await FileSystem.writeAsStringAsync(fileUri, pdfBase64, {\n      encoding: FileSystem.EncodingType.Base64,\n    });\n\n    await shareAsync(fileUri);\n  };\n  const drawSquareLib = async () => {\n    const dimensions = calculatePDFDimensions();\n    const pdfDoc = await PDFDocument.create();\n    const page = pdfDoc.addPage([dimensions.widthPts, dimensions.heightPts]);\n\n    page.drawSquare({\n      x: 20,\n      y: 20,\n      size: 141.73,\n      borderWidth: 2,\n      color: rgb(1, 1, 1),\n    });\n\n    const pdfBytes = await pdfDoc.save();\n    const pdfBase64 = encode(pdfBytes);\n    const fileUri = FileSystem.cacheDirectory + \"pattern.pdf\";\n    await FileSystem.writeAsStringAsync(fileUri, pdfBase64, {\n      encoding: FileSystem.EncodingType.Base64,\n    });\n\n    await shareAsync(fileUri);\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\n      <View style={styles.container}>\n        <Text style={styles.title}>TShirtFinal</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Hauteur totale (cm)\"\n          keyboardType=\"numeric\"\n          value={taille ? taille.toString() : \"\"}\n          onChangeText={(text) => setTaille(Number(text))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de poitrine (cm)\"\n          keyboardType=\"numeric\"\n          value={poitrine ? poitrine.toString() : \"\"}\n          onChangeText={(text) => setPoitrine(Number(text))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Hauteur dos (cm)\"\n          keyboardType=\"numeric\"\n          value={longueurDos ? longueurDos.toString() : \"\"}\n          onChangeText={(text) => setLongueurDos(Number(text))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de buste (cm)\"\n          keyboardType=\"numeric\"\n          value={buste ? buste.toString() : \"\"}\n          onChangeText={(text) => setBuste(Number(text))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Distance entre les épaules (cm)\"\n          keyboardType=\"numeric\"\n          value={distanceEpaules ? distanceEpaules.toString() : \"\"}\n          onChangeText={(text) => setDistanceEpaules(Number(text))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Carrure - largeur du dos (cm)\"\n          keyboardType=\"numeric\"\n          value={carrure ? carrure.toString() : \"\"}\n          onChangeText={(text) => setCarrure(Number(text))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de taille (cm)\"\n          keyboardType=\"numeric\"\n          value={tourTaille ? tourTaille.toString() : \"\"}\n          onChangeText={(text) => setTourTaille(Number(text))}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Longueur cou taille (cm)\"\n          keyboardType=\"numeric\"\n          value={longueurDevant ? longueurDevant.toString() : \"\"}\n          onChangeText={(text) => setLongueurDevant(Number(text))}\n        />\n        <Button title=\"Télécharger en PDF\" onPress={saveAsPDF} />\n        <Button\n          title=\"Télécharger Avec Mensurations\"\n          onPress={setDefaultMeasurements}\n        />\n        <Button title=\"Carré PDF Lib\" onPress={drawSquareLib} />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  input: {\n    width: 300,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n});\n\nexport default TShirtFinal;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}