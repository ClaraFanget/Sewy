{"ast":null,"code":"export const creerUtilisateur = (nom, prenom, pseudo, mot_de_passe, mail, taille) => {\n  var data = JSON.stringify({\n    nom: nom,\n    prenom: prenom,\n    pseudo: pseudo,\n    mot_de_passe: mot_de_passe,\n    mail: mail,\n    taille: taille\n  });\n  \"\";\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs\", {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Erreur\");\n    }\n    return response.json();\n  });\n};\nexport const supprimerUtilisateur = id => {\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs/\" + id, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Erreur\");\n    }\n    return response.json();\n  });\n};\nexport const modifierUtilisateur = (id, nom, prenom, mail, mot_de_passe) => {\n  var data = JSON.stringify({\n    nom: nom,\n    prenom: prenom,\n    mot_de_passe: mot_de_passe,\n    mail: mail\n  });\n  \"\";\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs/\" + id, {\n    method: \"PUT\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Erreur\");\n    }\n    return response.json();\n  });\n};\nexport const getUtilisateurs = () => {\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Erreur\");\n    }\n    return response.json();\n  });\n};\nexport const getUtilisateur = id => {\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs\" + id, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Erreur\");\n    }\n    return response.json();\n  });\n};\nexport const logUser = (pseudo, mot_de_passe) => {\n  var data = JSON.stringify({\n    pseudo: pseudo,\n    mot_de_passe: mot_de_passe\n  });\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs/login\", {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (!response.ok) {\n      return false;\n    }\n    return response.json();\n  });\n};\nexport const convertSvgToPdf = svg => {\n  return fetch(\"http://172.20.10.3:3000/api/convert-svg\", {\n    method: \"POST\",\n    body: svg,\n    headers: {\n      \"Content-Type\": \"image/svg+xml\"\n    }\n  }).then(response => {\n    if (!response.ok) {\n      return false;\n    }\n    return response.blob();\n  });\n};","map":{"version":3,"names":["creerUtilisateur","nom","prenom","pseudo","mot_de_passe","mail","taille","data","JSON","stringify","fetch","method","body","headers","then","response","ok","Error","json","supprimerUtilisateur","id","modifierUtilisateur","getUtilisateurs","getUtilisateur","logUser","convertSvgToPdf","svg","blob"],"sources":["/Users/clara/Desktop/Sewy/SewyCode/services/api.js"],"sourcesContent":["// Fonction pour créer un nouvel utilisateur\nexport const creerUtilisateur = (\n  nom,\n  prenom,\n  pseudo,\n  mot_de_passe,\n  mail,\n  taille\n) => {\n  // Crée un objet JSON avec le pseudo, le mot de passe et l'e-mail\n  var data = JSON.stringify({\n    nom: nom,\n    prenom: prenom,\n    pseudo: pseudo,\n    mot_de_passe: mot_de_passe,\n    mail: mail,\n    taille: taille,\n  });\n  (\"\");\n\n  // Envoie une requête POST à l'API pour créer un utilisateur\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs\", {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (!response.ok) {\n      throw new Error(\"Erreur\");\n    }\n    return response.json(); // Renvoie les données JSON de la réponse\n  });\n};\n\n//Fonction pour supprimer un utilisateur\nexport const supprimerUtilisateur = (id) => {\n  // Envoie une requête Delete à l'API pour supprimer un utilisateur\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs/\" + id, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (!response.ok) {\n      throw new Error(\"Erreur\");\n    }\n    return response.json();\n  });\n};\n\n//Fonction pour modifier un utilisateur\nexport const modifierUtilisateur = (id, nom, prenom, mail, mot_de_passe) => {\n  var data = JSON.stringify({\n    nom: nom,\n    prenom: prenom,\n    mot_de_passe: mot_de_passe,\n    mail: mail,\n  });\n  (\"\");\n  // Envoie une requête Delete à l'API pour modifier un utilisateur\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs/\" + id, {\n    method: \"PUT\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (!response.ok) {\n      throw new Error(\"Erreur\");\n    }\n    return response.json();\n  });\n};\n\n// Fonction permettant de récupérer les utilisateurs\nexport const getUtilisateurs = () => {\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (!response.ok) {\n      throw new Error(\"Erreur\");\n    }\n    return response.json();\n  });\n};\n\n// Fonction permettant de récupérer un utilisateur en particulier\nexport const getUtilisateur = (id) => {\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs\" + id, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (!response.ok) {\n      throw new Error(\"Erreur\");\n    }\n    return response.json();\n  });\n};\n\n// Fonction de connexion de l'utilisateur\nexport const logUser = (pseudo, mot_de_passe) => {\n  var data = JSON.stringify({\n    pseudo: pseudo,\n    mot_de_passe: mot_de_passe,\n  });\n\n  return fetch(\"http://172.20.10.3:3000/api/utilisateurs/login\", {\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (!response.ok) {\n      return false;\n    }\n    return response.json();\n  });\n};\n\n// Fonction de connexion de l'utilisateur\nexport const convertSvgToPdf = (svg) => {\n  return fetch(\"http://172.20.10.3:3000/api/convert-svg\", {\n    method: \"POST\",\n    body: svg,\n    headers: {\n      \"Content-Type\": \"image/svg+xml\",\n    },\n  }).then((response) => {\n    if (!response.ok) {\n      return false;\n    }\n    return response.blob();\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}