{"ast":null,"code":"var _jsxFileName = \"/Users/clara/Desktop/Sewy/SewyCode/components/TShirtTest.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Svg, { Rect, Line, Path, Circle } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TShirtTest() {\n  const [taille, setTaille] = useState(0);\n  const [poitrine, setPoitrine] = useState(0);\n  const [longueurDos, setLongueurDos] = useState(0);\n  const [buste, setBuste] = useState(0);\n  const [distanceEpaules, setDistanceEpaules] = useState(0);\n  const [carrure, setCarrure] = useState(0);\n  const [tourTaille, setTourTaille] = useState(0);\n  const saveAsPDF = async () => {\n    const svgWidth = 1180;\n    const svgHeight = 1500;\n    const ptsPerCm = 72 / 2.54;\n    let xA = 50;\n    let yA = 50;\n    let xB = xA + (buste / 2 + 4) * ptsPerCm;\n    let yB = yA;\n    let xD = xA;\n    let yD = yA + longueurDos * ptsPerCm;\n    let xE = xA;\n    let yE = yA + (poitrine / 48 + 0.2) * ptsPerCm;\n    let xE1 = xE;\n    let yE1 = yE + 4.5 * ptsPerCm;\n    let hauteurEmmanchure = (taille / 8 + poitrine / 48 + 1.7) * ptsPerCm;\n    let xF = xA;\n    let yF = yA + hauteurEmmanchure;\n    console.log(\"F:\", xF, yF);\n    let xG = xA + poitrine / 12 * ptsPerCm;\n    let yG = yA;\n    let xH = xA + carrure / 2 * ptsPerCm;\n    let yH = yA;\n    let xF1 = xF + (buste / 4 + 2) * ptsPerCm;\n    let yF1 = yF;\n    let xD1 = xD + (tourTaille / 4 + 2) * ptsPerCm;\n    let yD1 = yD;\n    let xI = xH;\n    let yI = yF;\n    let xL = xH;\n    let yL = yE1;\n    let xL1 = xE1 + distanceEpaules / 2 * ptsPerCm;\n    let yL1 = yE1;\n    let xM = xI + 0.3 * ptsPerCm;\n    let yM = yI - 5 * ptsPerCm;\n    let controlX1 = xM - 80;\n    let controlY1 = yM;\n    let htmlContent = `\n    <html>\n    <body>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${svgWidth}\" height=\"${svgHeight}\">\n        <!-- Cadre de référence -->\n        <rect x=\"0\" y=\"0\" width=\"${svgWidth}\" height=\"${svgHeight}\" stroke=\"lightgrey\" stroke-width=\"1\" fill=\"transparent\"/>\n        \n        <!-- AB: Ligne horizontale en haut -->\n        <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xB}\" y2=\"${yB}\" stroke=\"blue\" stroke-width=\"2\"/>\n        \n        <!-- AD: Ligne verticale à gauche -->\n        <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xD}\" y2=\"${yD}\" stroke=\"red\" stroke-width=\"2\"/>\n        \n        <!-- Encolure: G à E -->\n        <path d=\"M${xG} ${yG} Q${(xG + xE) / 2} ${yE}, ${xE} ${yE}\" fill=\"none\" stroke=\"purple\" stroke-width=\"2\"/>\n        \n        <!-- Ligne AE -->\n        <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xE}\" y2=\"${yE}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n        \n        <!-- Ligne E jusqu'à E1 -->\n        <line x1=\"${xE}\" y1=\"${yE}\" x2=\"${xE1}\" y2=\"${yE1}\" stroke=\"green\" stroke-width=\"2\"/>\n        \n        <!-- Ligne d'épaule G à L1 -->\n        <line x1=\"${xG}\" y1=\"${yG}\" x2=\"${xL1}\" y2=\"${yL1}\" stroke=\"orange\" stroke-width=\"2\"/>\n        \n        <!-- Ligne hauteur d'emmanchure A à F -->\n        <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xF}\" y2=\"${yF}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n        \n        <!-- Ligne F à F1 (largeur à hauteur d'emmanchure) -->\n        <line x1=\"${xF}\" y1=\"${yF}\" x2=\"${xF1}\" y2=\"${yF1}\" stroke=\"brown\" stroke-width=\"2\"/>\n        \n        <!-- Ligne D à D1 (largeur en bas) -->\n        <line x1=\"${xD}\" y1=\"${yD}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"blue\" stroke-width=\"2\"/>\n        \n        <!-- Ligne de côté F1 à D1 -->\n        <line x1=\"${xF1}\" y1=\"${yF1}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"green\" stroke-width=\"2\"/>\n        \n        <!-- Ligne H à L (descente de 4.5cm) -->\n        <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xL}\" y2=\"${yL}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n        \n        <!-- Ligne H à I (perpendiculaire) -->\n        <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xI}\" y2=\"${yI}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n        \n        <!-- Point M (à partir de I) -->\n        <circle cx=\"${xM}\" cy=\"${yM}\" r=\"3\" fill=\"red\"/>\n        \n        <!-- Emmanchure: courbe de L1 à F1 -->\n        <path d=\"M${xL1} ${yL1} Q${controlX1} ${controlY1}, ${xF1} ${yF1}\" fill=\"none\" stroke=\"red\" stroke-width=\"2\"/>\n        \n        \n        <!-- Points de référence -->\n        <circle cx=\"${xA}\" cy=\"${yA}\" r=\"3\" fill=\"blue\"/> <text x=\"${xA - 10}\" y=\"${yA - 10}\" fill=\"blue\">A</text>\n        <circle cx=\"${xB}\" cy=\"${yB}\" r=\"3\" fill=\"blue\"/> <text x=\"${xB + 10}\" y=\"${yB - 10}\" fill=\"blue\">B</text>\n        <circle cx=\"${xD}\" cy=\"${yD}\" r=\"3\" fill=\"red\"/> <text x=\"${xD - 20}\" y=\"${yD + 10}\" fill=\"red\">D</text>\n        <circle cx=\"${xD1}\" cy=\"${yD1}\" r=\"3\" fill=\"blue\"/> <text x=\"${xD1 + 10}\" y=\"${yD1 + 10}\" fill=\"blue\">D1</text>\n        <circle cx=\"${xE}\" cy=\"${yE}\" r=\"3\" fill=\"green\"/> <text x=\"${xE - 20}\" y=\"${yE + 5}\" fill=\"green\">E</text>\n        <circle cx=\"${xE1}\" cy=\"${yE1}\" r=\"3\" fill=\"green\"/> <text x=\"${xE1 - 20}\" y=\"${yE1 + 5}\" fill=\"green\">E1</text>\n        <circle cx=\"${xF}\" cy=\"${yF}\" r=\"3\" fill=\"brown\"/> <text x=\"${xF - 20}\" y=\"${yF + 5}\" fill=\"brown\">F</text>\n        <circle cx=\"${xF1}\" cy=\"${yF1}\" r=\"3\" fill=\"brown\"/> <text x=\"${xF1 + 10}\" y=\"${yF1 + 5}\" fill=\"brown\">F1</text>\n        <circle cx=\"${xG}\" cy=\"${yG}\" r=\"3\" fill=\"orange\"/> <text x=\"${xG}\" y=\"${yG - 10}\" fill=\"orange\">G</text>\n        <circle cx=\"${xH}\" cy=\"${yH}\" r=\"3\" fill=\"purple\"/> <text x=\"${xH - 5}\" y=\"${yH - 10}\" fill=\"purple\">H</text>\n        <circle cx=\"${xI}\" cy=\"${yI}\" r=\"3\" fill=\"purple\"/> <text x=\"${xI + 10}\" y=\"${yI - 10}\" fill=\"purple\">I</text>\n        <circle cx=\"${xL}\" cy=\"${yL}\" r=\"3\" fill=\"purple\"/> <text x=\"${xL - 20}\" y=\"${yL + 5}\" fill=\"purple\">L</text>\n        <circle cx=\"${xL1}\" cy=\"${yL1}\" r=\"3\" fill=\"orange\"/> <text x=\"${xL1}\" y=\"${yL1 - 10}\" fill=\"orange\">L1</text>\n        <circle cx=\"${xM}\" cy=\"${yM}\" r=\"3\" fill=\"red\"/> <text x=\"${xM + 10}\" y=\"${yM + 5}\" fill=\"red\">M</text>\n      </svg>\n    </body>\n    </html>`;\n    const file = await printToFileAsync({\n      html: htmlContent,\n      base64: false\n    });\n    await shareAsync(file.uri);\n  };\n  return _jsxDEV(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    accessible: false,\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Patron T-Shirt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Taille (hauteur totale en cm)\",\n        keyboardType: \"numeric\",\n        value: taille ? taille.toString() : \"\",\n        onChangeText: text => setTaille(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de poitrine (cm)\",\n        keyboardType: \"numeric\",\n        value: poitrine ? poitrine.toString() : \"\",\n        onChangeText: text => setPoitrine(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Hauteur dos (base du cou \\xE0 la taille en cm)\",\n        keyboardType: \"numeric\",\n        value: longueurDos ? longueurDos.toString() : \"\",\n        onChangeText: text => setLongueurDos(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de buste (cm)\",\n        keyboardType: \"numeric\",\n        value: buste ? buste.toString() : \"\",\n        onChangeText: text => setBuste(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Distance entre les \\xE9paules (cm)\",\n        keyboardType: \"numeric\",\n        value: distanceEpaules ? distanceEpaules.toString() : \"\",\n        onChangeText: text => setDistanceEpaules(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Carrure - largeur du dos (cm)\",\n        keyboardType: \"numeric\",\n        value: carrure ? carrure.toString() : \"\",\n        onChangeText: text => setCarrure(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Tour de taille (cm)\",\n        keyboardType: \"numeric\",\n        value: tourTaille ? tourTaille.toString() : \"\",\n        onChangeText: text => setTourTaille(Number(text))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"T\\xE9l\\xE9charger en PDF\",\n        onPress: saveAsPDF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  input: {\n    width: 300,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10\n  }\n});\nexport default TShirtTest;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","Keyboard","TouchableWithoutFeedback","Svg","Rect","Line","Path","Circle","printToFileAsync","shareAsync","jsxDEV","_jsxDEV","TShirtTest","taille","setTaille","poitrine","setPoitrine","longueurDos","setLongueurDos","buste","setBuste","distanceEpaules","setDistanceEpaules","carrure","setCarrure","tourTaille","setTourTaille","saveAsPDF","svgWidth","svgHeight","ptsPerCm","xA","yA","xB","yB","xD","yD","xE","yE","xE1","yE1","hauteurEmmanchure","xF","yF","console","log","xG","yG","xH","yH","xF1","yF1","xD1","yD1","xI","yI","xL","yL","xL1","yL1","xM","yM","controlX1","controlY1","htmlContent","file","html","base64","uri","onPress","dismiss","accessible","children","style","styles","container","title","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","keyboardType","value","toString","onChangeText","text","Number","create","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","width","borderWidth","borderColor","borderRadius"],"sources":["/Users/clara/Desktop/Sewy/SewyCode/components/TShirtTest.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  TextInput,\n  Button,\n  Text,\n  StyleSheet,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport Svg, { Rect, Line, Path, Circle } from \"react-native-svg\";\nimport { printToFileAsync } from \"expo-print\";\nimport { shareAsync } from \"expo-sharing\";\n\nexport function TShirtTest() {\n  const [taille, setTaille] = useState(0); // Hauteur totale (tête aux pieds)\n  const [poitrine, setPoitrine] = useState(0); // Tour de poitrine\n  const [longueurDos, setLongueurDos] = useState(0); // Hauteur dos (base du cou à la taille)\n  const [buste, setBuste] = useState(0); // Tour de buste\n  const [distanceEpaules, setDistanceEpaules] = useState(0); // Distance entre les deux épaules\n  const [carrure, setCarrure] = useState(0); // Largeur du dos sous les aisselles\n  const [tourTaille, setTourTaille] = useState(0); // Tour de taille\n\n  const saveAsPDF = async () => {\n    // Définition de l'échelle pour le PDF\n    const svgWidth = 1180;\n    const svgHeight = 1500;\n    const ptsPerCm = 72 / 2.54;\n\n    // Conversion des mesures en points pour le PDF\n    // Point A - Point de départ en haut à gauche\n    let xA = 50;\n    let yA = 50;\n\n    // AB = tour de buste/2 + 4 cm d'aisance\n    let xB = xA + (buste / 2 + 4) * ptsPerCm;\n    let yB = yA;\n\n    // AD = hauteur dos (base du cou à la taille)\n    let xD = xA;\n    let yD = yA + longueurDos * ptsPerCm;\n\n    // AE = 1/48 tour de poitrine + 0.2 cm\n    let xE = xA;\n    let yE = yA + (poitrine / 48 + 0.2) * ptsPerCm;\n\n    // AE1 = descendre de 4.5 cm\n    let xE1 = xE;\n    let yE1 = yE + 4.5 * ptsPerCm;\n\n    // AF = 1/8 hauteur + 1/48 tour de poitrine + 1.7 cm (hauteur d'emmanchure)\n    let hauteurEmmanchure = (taille / 8 + poitrine / 48 + 1.7) * ptsPerCm;\n    let xF = xA;\n    let yF = yA + hauteurEmmanchure;\n    console.log(\"F:\", xF, yF);\n\n    // AG = 1/12 tour de poitrine\n    let xG = xA + (poitrine / 12) * ptsPerCm;\n    let yG = yA;\n\n    // AH = 1/2 carrure (largeur du dos)\n    let xH = xA + (carrure / 2) * ptsPerCm;\n    let yH = yA; // H est au même niveau que F (hauteur d'emmanchure)\n\n    // FF1 = 1/4 tour de buste + 2 cm d'aisance\n    let xF1 = xF + (buste / 4 + 2) * ptsPerCm;\n    let yF1 = yF;\n\n    // DD1 = 1/4 tour de taille + 2 cm d'aisance\n    let xD1 = xD + (tourTaille / 4 + 2) * ptsPerCm;\n    let yD1 = yD;\n\n    // HI = perpendiculaire à FF1 (I est au même x que F1)\n    let xI = xH;\n    let yI = yF;\n\n    // HL = descendre de 4.5 cm\n    let xL = xH;\n    let yL = yE1;\n\n    // E1L1 = 1/2 distance entre les deux épaules\n    let xL1 = xE1 + (distanceEpaules / 2) * ptsPerCm;\n    let yL1 = yE1;\n\n    // IM = remonter de 5 cm et aller vers la droite de 0.3 cm\n    let xM = xI + 0.3 * ptsPerCm;\n    let yM = yI - 5 * ptsPerCm;\n\n    // Point de contrôle pour la courbe d'emmanchure (peut nécessiter des ajustements)\n    let controlX1 = xM - 80;\n    let controlY1 = yM;\n\n    // Création du SVG pour le PDF\n    let htmlContent = `\n    <html>\n    <body>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${svgWidth}\" height=\"${svgHeight}\">\n        <!-- Cadre de référence -->\n        <rect x=\"0\" y=\"0\" width=\"${svgWidth}\" height=\"${svgHeight}\" stroke=\"lightgrey\" stroke-width=\"1\" fill=\"transparent\"/>\n        \n        <!-- AB: Ligne horizontale en haut -->\n        <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xB}\" y2=\"${yB}\" stroke=\"blue\" stroke-width=\"2\"/>\n        \n        <!-- AD: Ligne verticale à gauche -->\n        <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xD}\" y2=\"${yD}\" stroke=\"red\" stroke-width=\"2\"/>\n        \n        <!-- Encolure: G à E -->\n        <path d=\"M${xG} ${yG} Q${\n      (xG + xE) / 2\n    } ${yE}, ${xE} ${yE}\" fill=\"none\" stroke=\"purple\" stroke-width=\"2\"/>\n        \n        <!-- Ligne AE -->\n        <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xE}\" y2=\"${yE}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n        \n        <!-- Ligne E jusqu'à E1 -->\n        <line x1=\"${xE}\" y1=\"${yE}\" x2=\"${xE1}\" y2=\"${yE1}\" stroke=\"green\" stroke-width=\"2\"/>\n        \n        <!-- Ligne d'épaule G à L1 -->\n        <line x1=\"${xG}\" y1=\"${yG}\" x2=\"${xL1}\" y2=\"${yL1}\" stroke=\"orange\" stroke-width=\"2\"/>\n        \n        <!-- Ligne hauteur d'emmanchure A à F -->\n        <line x1=\"${xA}\" y1=\"${yA}\" x2=\"${xF}\" y2=\"${yF}\" stroke=\"green\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n        \n        <!-- Ligne F à F1 (largeur à hauteur d'emmanchure) -->\n        <line x1=\"${xF}\" y1=\"${yF}\" x2=\"${xF1}\" y2=\"${yF1}\" stroke=\"brown\" stroke-width=\"2\"/>\n        \n        <!-- Ligne D à D1 (largeur en bas) -->\n        <line x1=\"${xD}\" y1=\"${yD}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"blue\" stroke-width=\"2\"/>\n        \n        <!-- Ligne de côté F1 à D1 -->\n        <line x1=\"${xF1}\" y1=\"${yF1}\" x2=\"${xD1}\" y2=\"${yD1}\" stroke=\"green\" stroke-width=\"2\"/>\n        \n        <!-- Ligne H à L (descente de 4.5cm) -->\n        <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xL}\" y2=\"${yL}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n        \n        <!-- Ligne H à I (perpendiculaire) -->\n        <line x1=\"${xH}\" y1=\"${yH}\" x2=\"${xI}\" y2=\"${yI}\" stroke=\"purple\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n        \n        <!-- Point M (à partir de I) -->\n        <circle cx=\"${xM}\" cy=\"${yM}\" r=\"3\" fill=\"red\"/>\n        \n        <!-- Emmanchure: courbe de L1 à F1 -->\n        <path d=\"M${xL1} ${yL1} Q${controlX1} ${controlY1}, ${xF1} ${yF1}\" fill=\"none\" stroke=\"red\" stroke-width=\"2\"/>\n        \n        \n        <!-- Points de référence -->\n        <circle cx=\"${xA}\" cy=\"${yA}\" r=\"3\" fill=\"blue\"/> <text x=\"${\n      xA - 10\n    }\" y=\"${yA - 10}\" fill=\"blue\">A</text>\n        <circle cx=\"${xB}\" cy=\"${yB}\" r=\"3\" fill=\"blue\"/> <text x=\"${\n      xB + 10\n    }\" y=\"${yB - 10}\" fill=\"blue\">B</text>\n        <circle cx=\"${xD}\" cy=\"${yD}\" r=\"3\" fill=\"red\"/> <text x=\"${\n      xD - 20\n    }\" y=\"${yD + 10}\" fill=\"red\">D</text>\n        <circle cx=\"${xD1}\" cy=\"${yD1}\" r=\"3\" fill=\"blue\"/> <text x=\"${\n      xD1 + 10\n    }\" y=\"${yD1 + 10}\" fill=\"blue\">D1</text>\n        <circle cx=\"${xE}\" cy=\"${yE}\" r=\"3\" fill=\"green\"/> <text x=\"${\n      xE - 20\n    }\" y=\"${yE + 5}\" fill=\"green\">E</text>\n        <circle cx=\"${xE1}\" cy=\"${yE1}\" r=\"3\" fill=\"green\"/> <text x=\"${\n      xE1 - 20\n    }\" y=\"${yE1 + 5}\" fill=\"green\">E1</text>\n        <circle cx=\"${xF}\" cy=\"${yF}\" r=\"3\" fill=\"brown\"/> <text x=\"${\n      xF - 20\n    }\" y=\"${yF + 5}\" fill=\"brown\">F</text>\n        <circle cx=\"${xF1}\" cy=\"${yF1}\" r=\"3\" fill=\"brown\"/> <text x=\"${\n      xF1 + 10\n    }\" y=\"${yF1 + 5}\" fill=\"brown\">F1</text>\n        <circle cx=\"${xG}\" cy=\"${yG}\" r=\"3\" fill=\"orange\"/> <text x=\"${xG}\" y=\"${\n      yG - 10\n    }\" fill=\"orange\">G</text>\n        <circle cx=\"${xH}\" cy=\"${yH}\" r=\"3\" fill=\"purple\"/> <text x=\"${\n      xH - 5\n    }\" y=\"${yH - 10}\" fill=\"purple\">H</text>\n        <circle cx=\"${xI}\" cy=\"${yI}\" r=\"3\" fill=\"purple\"/> <text x=\"${\n      xI + 10\n    }\" y=\"${yI - 10}\" fill=\"purple\">I</text>\n        <circle cx=\"${xL}\" cy=\"${yL}\" r=\"3\" fill=\"purple\"/> <text x=\"${\n      xL - 20\n    }\" y=\"${yL + 5}\" fill=\"purple\">L</text>\n        <circle cx=\"${xL1}\" cy=\"${yL1}\" r=\"3\" fill=\"orange\"/> <text x=\"${xL1}\" y=\"${\n      yL1 - 10\n    }\" fill=\"orange\">L1</text>\n        <circle cx=\"${xM}\" cy=\"${yM}\" r=\"3\" fill=\"red\"/> <text x=\"${\n      xM + 10\n    }\" y=\"${yM + 5}\" fill=\"red\">M</text>\n      </svg>\n    </body>\n    </html>`;\n\n    // Génération et partage du PDF\n    const file = await printToFileAsync({ html: htmlContent, base64: false });\n    await shareAsync(file.uri);\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss} accessible={false}>\n      <View style={styles.container}>\n        <Text style={styles.title}>Patron T-Shirt</Text>\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Taille (hauteur totale en cm)\"\n          keyboardType=\"numeric\"\n          value={taille ? taille.toString() : \"\"}\n          onChangeText={(text) => setTaille(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de poitrine (cm)\"\n          keyboardType=\"numeric\"\n          value={poitrine ? poitrine.toString() : \"\"}\n          onChangeText={(text) => setPoitrine(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Hauteur dos (base du cou à la taille en cm)\"\n          keyboardType=\"numeric\"\n          value={longueurDos ? longueurDos.toString() : \"\"}\n          onChangeText={(text) => setLongueurDos(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de buste (cm)\"\n          keyboardType=\"numeric\"\n          value={buste ? buste.toString() : \"\"}\n          onChangeText={(text) => setBuste(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Distance entre les épaules (cm)\"\n          keyboardType=\"numeric\"\n          value={distanceEpaules ? distanceEpaules.toString() : \"\"}\n          onChangeText={(text) => setDistanceEpaules(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Carrure - largeur du dos (cm)\"\n          keyboardType=\"numeric\"\n          value={carrure ? carrure.toString() : \"\"}\n          onChangeText={(text) => setCarrure(Number(text))}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tour de taille (cm)\"\n          keyboardType=\"numeric\"\n          value={tourTaille ? tourTaille.toString() : \"\"}\n          onChangeText={(text) => setTourTaille(Number(text))}\n        />\n\n        <Button title=\"Télécharger en PDF\" onPress={saveAsPDF} />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  input: {\n    width: 300,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n});\n\nexport default TShirtTest;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}